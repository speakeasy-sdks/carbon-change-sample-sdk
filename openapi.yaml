openapi: 3.0.3
info:
  title: Carbon Change CO2 Calculator API
  version: 0.0.7
  description: An API to compute CO2 intakes from conservative farming
paths:
  /api/areals/:
    get:
      operationId: areals_list
      description: An endpoint to list areals
      tags:
      - Choices
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArealsListErrorResponse400'
          description: ''
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LabeledChoices'
          description: ''
  /api/crop-areal-features/:
    get:
      operationId: crop_areal_features_list
      description: An endpoint to list crops' areal features
      tags:
      - Catalogs
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CropArealFeaturesListErrorResponse400'
          description: ''
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CropArealFeature'
          description: ''
  /api/crop-areal-features/{id}/:
    get:
      operationId: crop_areal_features_retrieve
      description: An endpoint to retrieve a crop's areal features
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Caratteristica areale/coltura.
        required: true
      tags:
      - Catalogs
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CropArealFeaturesRetrieveErrorResponse400'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Non trovato.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CropArealFeature'
          description: ''
  /api/crop-fertilization-requirements/:
    get:
      operationId: crop_fertilization_requirements_list
      description: An endpoint to list crops' fertilization requirements
      tags:
      - Catalogs
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CropFertilizationRequirementsListErrorResponse400'
          description: ''
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CropFertilizationRequirement'
          description: ''
  /api/crop-fertilization-requirements/{id}/:
    get:
      operationId: crop_fertilization_requirements_retrieve
      description: An endpoint to retrieve a crop's fertilization requirements
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Fabbisogno di fertilizzante
          della coltura.
        required: true
      tags:
      - Catalogs
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CropFertilizationRequirementsRetrieveErrorResponse400'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Non trovato.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CropFertilizationRequirement'
          description: ''
  /api/crops/:
    get:
      operationId: crops_list
      description: An endpoint to list crops
      tags:
      - Choices
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CropsListErrorResponse400'
          description: ''
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LabeledChoices'
          description: ''
  /api/culture-reference-consumptions/:
    get:
      operationId: culture_reference_consumptions_list
      description: An endpoint to list cultures' reference consumptions
      tags:
      - Catalogs
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CultureReferenceConsumptionsListErrorResponse400'
          description: ''
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CultureReferenceConsumption'
          description: ''
  /api/culture-reference-consumptions/{id}/:
    get:
      operationId: culture_reference_consumptions_retrieve
      description: An endpoint to retrieve a culture's reference consumptions
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Consumo di riferimento
          della coltura.
        required: true
      tags:
      - Catalogs
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CultureReferenceConsumptionsRetrieveErrorResponse400'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Non trovato.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CultureReferenceConsumption'
          description: ''
  /api/cultures/:
    get:
      operationId: cultures_list
      description: An endpoint to list cultures
      tags:
      - Culture
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CulturesListErrorResponse400'
          description: ''
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Culture'
          description: ''
    post:
      operationId: cultures_create
      description: An endpoint to create a new culture
      tags:
      - Culture
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CultureIn'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CultureIn'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CultureIn'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CulturesCreateErrorResponse400'
          description: ''
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Culture'
          description: ''
  /api/cultures/{id}/:
    get:
      operationId: cultures_retrieve
      description: An endpoint to retrieve a culture
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Coltura.
        required: true
      tags:
      - Culture
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CulturesRetrieveErrorResponse400'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Non trovato.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Culture'
          description: ''
    put:
      operationId: cultures_update
      description: An endpoint to replace a culture
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Coltura.
        required: true
      tags:
      - Culture
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Culture'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Culture'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Culture'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CulturesUpdateErrorResponse400'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Non trovato.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Culture'
          description: ''
    patch:
      operationId: cultures_partial_update
      description: An endpoint to update a culture
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Coltura.
        required: true
      tags:
      - Culture
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCulture'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCulture'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCulture'
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CulturesPartialUpdateErrorResponse400'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Non trovato.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Culture'
          description: ''
    delete:
      operationId: cultures_destroy
      description: An endpoint to delete a culture
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Coltura.
        required: true
      tags:
      - Culture
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CulturesDestroyErrorResponse400'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Non trovato.
                      attr: null
          description: ''
        '204':
          description: No response body
  /api/cultures/validate/:
    post:
      operationId: cultures_validate_create
      description: An endpoint to validate a culture
      tags:
      - Culture
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnboundCultureIn'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UnboundCultureIn'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UnboundCultureIn'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CulturesValidateCreateErrorResponse400'
          description: ''
        '204':
          description: No response body
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CultureValidationError'
          description: ''
  /api/farms/:
    get:
      operationId: farms_list
      description: An endpoint to list farms
      tags:
      - Farm
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FarmsListErrorResponse400'
          description: ''
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Farm'
          description: ''
    post:
      operationId: farms_create
      description: An endpoint to create a new farm
      tags:
      - Farm
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FarmIn'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FarmIn'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FarmIn'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FarmsCreateErrorResponse400'
          description: ''
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Farm'
          description: ''
  /api/farms/{id}/:
    get:
      operationId: farms_retrieve
      description: An endpoint to retrieve a farm
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Azienda.
        required: true
      tags:
      - Farm
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FarmsRetrieveErrorResponse400'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Non trovato.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Farm'
          description: ''
    put:
      operationId: farms_update
      description: An endpoint to replace a farm
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Azienda.
        required: true
      tags:
      - Farm
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Farm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Farm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Farm'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FarmsUpdateErrorResponse400'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Non trovato.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Farm'
          description: ''
    patch:
      operationId: farms_partial_update
      description: An endpoint to update a farm
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Azienda.
        required: true
      tags:
      - Farm
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFarm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFarm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFarm'
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FarmsPartialUpdateErrorResponse400'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Non trovato.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Farm'
          description: ''
    delete:
      operationId: farms_destroy
      description: An endpoint to delete a farm
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Azienda.
        required: true
      tags:
      - Farm
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FarmsDestroyErrorResponse400'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Non trovato.
                      attr: null
          description: ''
        '204':
          description: No response body
  /api/farms/{id}/landplots/:
    get:
      operationId: farms_landplots_list
      description: An endpoint to list a farm's land plots
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Azienda.
        required: true
      tags:
      - Farm
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FarmsLandplotsListErrorResponse400'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Non trovato.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LandPlot'
          description: ''
    post:
      operationId: farms_landplots_create
      description: An endpoint to create a land plot under the a farm
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Azienda.
        required: true
      tags:
      - Farm
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FarmLandPlotIn'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FarmLandPlotIn'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FarmLandPlotIn'
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FarmsLandplotsCreateErrorResponse400'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Non trovato.
                      attr: null
          description: ''
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LandPlot'
          description: ''
  /api/farms/{id}/systems/:
    get:
      operationId: farms_systems_list
      description: An endpoint to list a farm's systems
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Azienda.
        required: true
      tags:
      - Farm
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FarmsSystemsListErrorResponse400'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Non trovato.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/System'
          description: ''
    post:
      operationId: farms_systems_create
      description: An endpoint to create a system under the a farm
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Azienda.
        required: true
      tags:
      - Farm
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FarmSystemIn'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FarmSystemIn'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FarmSystemIn'
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FarmsSystemsCreateErrorResponse400'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Non trovato.
                      attr: null
          description: ''
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System'
          description: ''
  /api/fertilizers/:
    get:
      operationId: fertilizers_list
      description: An endpoint to list fertilizers
      tags:
      - Choices
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FertilizersListErrorResponse400'
          description: ''
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Choices'
          description: ''
  /api/land-managements/:
    get:
      operationId: land_managements_list
      description: An endpoint to list land managements
      tags:
      - Choices
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LandManagementsListErrorResponse400'
          description: ''
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LabeledChoices'
          description: ''
  /api/landplots/:
    get:
      operationId: landplots_list
      description: An endpoint to list land plots
      tags:
      - Land Plot
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LandplotsListErrorResponse400'
          description: ''
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LandPlot'
          description: ''
    post:
      operationId: landplots_create
      description: An endpoint to create a new land plot
      tags:
      - Land Plot
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LandPlotIn'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LandPlotIn'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LandPlotIn'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LandplotsCreateErrorResponse400'
          description: ''
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LandPlot'
          description: ''
  /api/landplots/{id}/:
    get:
      operationId: landplots_retrieve
      description: An endpoint to retrieve a land plot
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Appezzamento.
        required: true
      tags:
      - Land Plot
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LandplotsRetrieveErrorResponse400'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Non trovato.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LandPlot'
          description: ''
    put:
      operationId: landplots_update
      description: An endpoint to replace a land plot
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Appezzamento.
        required: true
      tags:
      - Land Plot
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LandPlot'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LandPlot'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LandPlot'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LandplotsUpdateErrorResponse400'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Non trovato.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LandPlot'
          description: ''
    patch:
      operationId: landplots_partial_update
      description: An endpoint to update a land plot
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Appezzamento.
        required: true
      tags:
      - Land Plot
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedLandPlot'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedLandPlot'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedLandPlot'
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LandplotsPartialUpdateErrorResponse400'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Non trovato.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LandPlot'
          description: ''
    delete:
      operationId: landplots_destroy
      description: An endpoint to delete a land plot
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Appezzamento.
        required: true
      tags:
      - Land Plot
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LandplotsDestroyErrorResponse400'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Non trovato.
                      attr: null
          description: ''
        '204':
          description: No response body
  /api/landplots/{id}/baseline/:
    get:
      operationId: landplots_baseline_retrieve
      description: An endpoint to retrieve a land plot's baseline system
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Appezzamento.
        required: true
      tags:
      - Land Plot
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LandplotsBaselineRetrieveErrorResponse400'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Non trovato.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System'
          description: ''
    post:
      operationId: landplots_baseline_create
      description: An endpoint to create a baseline system under the land plot
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Appezzamento.
        required: true
      tags:
      - Land Plot
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LandPlotBaselineSystemIn'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LandPlotBaselineSystemIn'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LandPlotBaselineSystemIn'
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LandplotsBaselineCreateErrorResponse400'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Non trovato.
                      attr: null
          description: ''
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System'
          description: ''
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse409'
          description: ''
  /api/locations/:
    get:
      operationId: locations_retrieve
      parameters:
      - in: query
        name: c
        schema:
          type: string
          default: IT
      - in: query
        name: f
        schema:
          type: string
          default: p
      tags:
      - Choices
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
          description: ''
        '400':
          description: No response body
  /api/organic-content-levels/:
    get:
      operationId: organic_content_levels_list
      description: An endpoint to list organic content levels
      tags:
      - Choices
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganicContentLevelsListErrorResponse400'
          description: ''
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LabeledChoices'
          description: ''
  /api/organic-fertilizers/:
    get:
      operationId: organic_fertilizers_list
      description: An endpoint to list organic fertilizers
      tags:
      - Catalogs
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganicFertilizersListErrorResponse400'
          description: ''
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganicFertilizer'
          description: ''
  /api/organic-fertilizers/{id}/:
    get:
      operationId: organic_fertilizers_retrieve
      description: An endpoint to retrieve an organic fertilizer
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Fertilizzante organico.
        required: true
      tags:
      - Catalogs
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganicFertilizersRetrieveErrorResponse400'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Non trovato.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganicFertilizer'
          description: ''
  /api/runs/:
    get:
      operationId: runs_list
      description: An endpoint to list runs
      parameters:
      - in: query
        name: expand
        schema:
          type: boolean
      tags:
      - Run
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunsListErrorResponse400'
          description: ''
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Run'
          description: ''
    post:
      operationId: runs_create
      description: An endpoint to create a new run
      tags:
      - Run
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RunIn'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RunIn'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RunIn'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunsCreateErrorResponse400'
          description: ''
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunSerializerExpanded'
          description: ''
  /api/runs/{id}/:
    get:
      operationId: runs_retrieve
      description: An endpoint to retrieve a run
      parameters:
      - in: query
        name: expand
        schema:
          type: boolean
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this calcolo.
        required: true
      tags:
      - Run
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunsRetrieveErrorResponse400'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Non trovato.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Run'
          description: ''
    put:
      operationId: runs_update
      description: An endpoint to replace a run
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this calcolo.
        required: true
      tags:
      - Run
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Run'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Run'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Run'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunsUpdateErrorResponse400'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Non trovato.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Run'
          description: ''
    patch:
      operationId: runs_partial_update
      description: An endpoint to update a run
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this calcolo.
        required: true
      tags:
      - Run
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRun'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedRun'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedRun'
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunsPartialUpdateErrorResponse400'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Non trovato.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Run'
          description: ''
    delete:
      operationId: runs_destroy
      description: An endpoint to delete a run
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this calcolo.
        required: true
      tags:
      - Run
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunsDestroyErrorResponse400'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Non trovato.
                      attr: null
          description: ''
        '204':
          description: No response body
  /api/runs/{id}/export/:
    post:
      operationId: runs_export
      description: An endpoint to export a model run
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this calcolo.
        required: true
      tags:
      - Run
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunsExportErrorResponse400'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Non trovato.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunExport'
          description: ''
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse409'
          description: ''
  /api/runs/{id}/launch/:
    post:
      operationId: runs_launch
      description: An endpoint to launch a model run
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this calcolo.
        required: true
      tags:
      - Run
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunsLaunchErrorResponse400'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Non trovato.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunOutput'
          description: ''
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse422'
          description: ''
  /api/soil-granularities/:
    get:
      operationId: soil_granularities_list
      description: An endpoint to list soil granularities
      tags:
      - Choices
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SoilGranularitiesListErrorResponse400'
          description: ''
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LabeledChoices'
          description: ''
  /api/soil-organic-compositions/:
    get:
      operationId: soil_organic_compositions_list
      description: An endpoint to list soil's organic compositions
      tags:
      - Catalogs
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SoilOrganicCompositionsListErrorResponse400'
          description: ''
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SoilOrganicComposition'
          description: ''
  /api/soil-organic-compositions/{id}/:
    get:
      operationId: soil_organic_compositions_retrieve
      description: An endpoint to retrieve a soil's organic composition
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Composizione organica
          del suolo.
        required: true
      tags:
      - Catalogs
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SoilOrganicCompositionsRetrieveErrorResponse400'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Non trovato.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SoilOrganicComposition'
          description: ''
  /api/systems/:
    get:
      operationId: systems_list
      description: An endpoint to list systems
      tags:
      - System
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemsListErrorResponse400'
          description: ''
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/System'
          description: ''
    post:
      operationId: systems_create
      description: An endpoint to create a new system
      tags:
      - System
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SystemIn'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SystemIn'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SystemIn'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemsCreateErrorResponse400'
          description: ''
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System'
          description: ''
  /api/systems/{id}/:
    get:
      operationId: systems_retrieve
      description: An endpoint to retrieve a system
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Sistema.
        required: true
      tags:
      - System
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemsRetrieveErrorResponse400'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Non trovato.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System'
          description: ''
    put:
      operationId: systems_update
      description: An endpoint to replace a system
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Sistema.
        required: true
      tags:
      - System
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/System'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/System'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/System'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemsUpdateErrorResponse400'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Non trovato.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System'
          description: ''
    patch:
      operationId: systems_partial_update
      description: An endpoint to update a system
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Sistema.
        required: true
      tags:
      - System
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSystem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSystem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSystem'
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemsPartialUpdateErrorResponse400'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Non trovato.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System'
          description: ''
    delete:
      operationId: systems_destroy
      description: An endpoint to delete a system
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Sistema.
        required: true
      tags:
      - System
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemsDestroyErrorResponse400'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Non trovato.
                      attr: null
          description: ''
        '204':
          description: No response body
  /api/systems/{id}/cultures/:
    get:
      operationId: systems_cultures_list
      description: An endpoint to list a system's cultures
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Sistema.
        required: true
      tags:
      - System
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemsCulturesListErrorResponse400'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Non trovato.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Culture'
          description: ''
    post:
      operationId: systems_cultures_create
      description: An endpoint to create a culture under the a system
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Sistema.
        required: true
      tags:
      - System
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SystemCultureIn'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SystemCultureIn'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SystemCultureIn'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemsCulturesCreateErrorResponse400'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Non trovato.
                      attr: null
          description: ''
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Culture'
          description: ''
  /auth/jwt/create/:
    post:
      operationId: auth_jwt_create_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomTokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomTokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomTokenObtainPair'
        required: true
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthJwtCreateCreateErrorResponse400'
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomTokenObtainPair'
          description: ''
  /auth/jwt/refresh/:
    post:
      operationId: auth_jwt_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthJwtRefreshCreateErrorResponse400'
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /auth/jwt/verify/:
    post:
      operationId: auth_jwt_verify_create
      description: |-
        Takes a token and indicates if it is valid.  This view provides no
        information about a token's fitness for a particular use.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenVerify'
        required: true
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthJwtVerifyCreateErrorResponse400'
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenVerify'
          description: ''
components:
  schemas:
    ArealEnum:
      enum:
      - north
      - center
      - south
      - AG
      - AL
      - AN
      - AO
      - AR
      - AP
      - AT
      - AV
      - BA
      - BT
      - BL
      - BN
      - BG
      - BI
      - BO
      - BZ
      - BS
      - BR
      - CA
      - CL
      - CB
      - CE
      - CT
      - CZ
      - CH
      - CO
      - CS
      - CR
      - KR
      - CN
      - EN
      - FM
      - FE
      - FI
      - FG
      - FC
      - FR
      - GE
      - GO
      - GR
      - IM
      - IS
      - SP
      - AQ
      - LT
      - LE
      - LC
      - LI
      - LO
      - LU
      - MC
      - MN
      - MS
      - MT
      - ME
      - MI
      - MO
      - MB
      - NA
      - 'NO'
      - NU
      - OR
      - PD
      - PA
      - PR
      - PV
      - PG
      - PU
      - PE
      - PC
      - PI
      - PT
      - PN
      - PZ
      - PO
      - RG
      - RA
      - RC
      - RE
      - RI
      - RN
      - RM
      - RO
      - SA
      - SS
      - SV
      - SI
      - SR
      - SO
      - SU
      - TA
      - TE
      - TR
      - TO
      - TP
      - TN
      - TV
      - TS
      - UD
      - VA
      - VE
      - VB
      - VC
      - VR
      - VV
      - VI
      - VT
      type: string
    ArealsListErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    AuthJwtCreateCreateError:
      oneOf:
      - $ref: '#/components/schemas/AuthJwtCreateCreateNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/AuthJwtCreateCreateUsernameErrorComponent'
      - $ref: '#/components/schemas/AuthJwtCreateCreatePasswordErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/AuthJwtCreateCreateNonFieldErrorsErrorComponent'
          username: '#/components/schemas/AuthJwtCreateCreateUsernameErrorComponent'
          password: '#/components/schemas/AuthJwtCreateCreatePasswordErrorComponent'
    AuthJwtCreateCreateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/AuthJwtCreateCreateValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/AuthJwtCreateCreateValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    AuthJwtCreateCreateNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          - no_active_account
          type: string
          description: |-
            * `invalid` - invalid
            * `no_active_account` - no_active_account
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    AuthJwtCreateCreatePasswordErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - password
          type: string
          description: '* `password` - password'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    AuthJwtCreateCreateUsernameErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - username
          type: string
          description: '* `username` - username'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    AuthJwtCreateCreateValidationError:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ValidationErrorEnum'
          description: '* `validation_error` - Validation Error'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/AuthJwtCreateCreateError'
      required:
      - errors
      - type
    AuthJwtRefreshCreateError:
      oneOf:
      - $ref: '#/components/schemas/AuthJwtRefreshCreateNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/AuthJwtRefreshCreateRefreshErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/AuthJwtRefreshCreateNonFieldErrorsErrorComponent'
          refresh: '#/components/schemas/AuthJwtRefreshCreateRefreshErrorComponent'
    AuthJwtRefreshCreateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/AuthJwtRefreshCreateValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/AuthJwtRefreshCreateValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    AuthJwtRefreshCreateNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    AuthJwtRefreshCreateRefreshErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - refresh
          type: string
          description: '* `refresh` - refresh'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    AuthJwtRefreshCreateValidationError:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ValidationErrorEnum'
          description: '* `validation_error` - Validation Error'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/AuthJwtRefreshCreateError'
      required:
      - errors
      - type
    AuthJwtVerifyCreateError:
      oneOf:
      - $ref: '#/components/schemas/AuthJwtVerifyCreateNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/AuthJwtVerifyCreateTokenErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/AuthJwtVerifyCreateNonFieldErrorsErrorComponent'
          token: '#/components/schemas/AuthJwtVerifyCreateTokenErrorComponent'
    AuthJwtVerifyCreateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/AuthJwtVerifyCreateValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/AuthJwtVerifyCreateValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    AuthJwtVerifyCreateNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    AuthJwtVerifyCreateTokenErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - token
          type: string
          description: '* `token` - token'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    AuthJwtVerifyCreateValidationError:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ValidationErrorEnum'
          description: '* `validation_error` - Validation Error'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/AuthJwtVerifyCreateError'
      required:
      - errors
      - type
    BlankEnum:
      enum:
      - ''
    Choices:
      type: object
      properties:
        code:
          type: string
          maxLength: 20
        label:
          type: string
          maxLength: 40
        description:
          type: string
          nullable: true
          maxLength: 255
      required:
      - code
      - description
      - label
    ClientErrorEnum:
      enum:
      - client_error
      type: string
    CropArealFeature:
      type: object
      properties:
        crop:
          allOf:
          - $ref: '#/components/schemas/CropEnum'
          description: |-
            * `grain_corn` - granella di mais
            * `silage_corn` - mais insilato
            * `wheat` - frumento
            * `soy` - soia
            * `alfalfa` - erba medica
            * `meadow` - prato
            * `orchard` - frutteto
            * `vineyard` - vigneto
            * `grassy_orchard` - frutteto inerbito
            * `grassy_vineyard` - vigneto inerbito
          title: Coltura
        areal:
          allOf:
          - $ref: '#/components/schemas/ArealEnum'
          description: |-
            * `north` - nord
            * `center` - centro
            * `south` - sud
            * `AG` - Agrigento
            * `AL` - Alessandria
            * `AN` - Ancona
            * `AO` - Aosta
            * `AR` - Arezzo
            * `AP` - Ascoli Piceno
            * `AT` - Asti
            * `AV` - Avellino
            * `BA` - Bari
            * `BT` - Barletta-Andria-Trani
            * `BL` - Belluno
            * `BN` - Benevento
            * `BG` - Bergamo
            * `BI` - Biella
            * `BO` - Bologna
            * `BZ` - Bolzano/Bozen
            * `BS` - Brescia
            * `BR` - Brindisi
            * `CA` - Cagliari
            * `CL` - Caltanissetta
            * `CB` - Campobasso
            * `CE` - Caserta
            * `CT` - Catania
            * `CZ` - Catanzaro
            * `CH` - Chieti
            * `CO` - Como
            * `CS` - Cosenza
            * `CR` - Cremona
            * `KR` - Crotone
            * `CN` - Cuneo
            * `EN` - Enna
            * `FM` - Fermo
            * `FE` - Ferrara
            * `FI` - Firenze
            * `FG` - Foggia
            * `FC` - Forlì-Cesena
            * `FR` - Frosinone
            * `GE` - Genova
            * `GO` - Gorizia
            * `GR` - Grosseto
            * `IM` - Imperia
            * `IS` - Isernia
            * `SP` - La Spezia
            * `AQ` - L’Aquila
            * `LT` - Latina
            * `LE` - Lecce
            * `LC` - Lecco
            * `LI` - Livorno
            * `LO` - Lodi
            * `LU` - Lucca
            * `MC` - Macerata
            * `MN` - Mantova
            * `MS` - Massa-Carrara
            * `MT` - Matera
            * `ME` - Messina
            * `MI` - Milano
            * `MO` - Modena
            * `MB` - Monza e Brianza
            * `NA` - Napoli
            * `NO` - Novara
            * `NU` - Nuoro
            * `OR` - Oristano
            * `PD` - Padova
            * `PA` - Palermo
            * `PR` - Parma
            * `PV` - Pavia
            * `PG` - Perugia
            * `PU` - Pesaro e Urbino
            * `PE` - Pescara
            * `PC` - Piacenza
            * `PI` - Pisa
            * `PT` - Pistoia
            * `PN` - Pordenone
            * `PZ` - Potenza
            * `PO` - Prato
            * `RG` - Ragusa
            * `RA` - Ravenna
            * `RC` - Reggio Calabria
            * `RE` - Reggio Emilia
            * `RI` - Rieti
            * `RN` - Rimini
            * `RM` - Roma
            * `RO` - Rovigo
            * `SA` - Salerno
            * `SS` - Sassari
            * `SV` - Savona
            * `SI` - Siena
            * `SR` - Siracusa
            * `SO` - Sondrio
            * `SU` - Sud Sardegna
            * `TA` - Taranto
            * `TE` - Teramo
            * `TR` - Terni
            * `TO` - Torino
            * `TP` - Trapani
            * `TN` - Trento
            * `TV` - Treviso
            * `TS` - Trieste
            * `UD` - Udine
            * `VA` - Varese
            * `VE` - Venezia
            * `VB` - Verbano Cusio Ossola
            * `VC` - Vercelli
            * `VR` - Verona
            * `VV` - Vibo Valentia
            * `VI` - Vicenza
            * `VT` - Viterbo
          default: center
          title: Areale
        biomass:
          type: number
          format: double
          title: Biomassa
        product:
          type: number
          format: double
          title: Prodotto
        roots:
          type: number
          format: double
          title: Radici
        isoumic:
          type: number
          format: double
          title: Isoumico
        notes:
          type: string
          nullable: true
          title: Note
      required:
      - crop
    CropArealFeaturesListErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    CropArealFeaturesRetrieveErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    CropEnum:
      enum:
      - grain_corn
      - silage_corn
      - wheat
      - soy
      - alfalfa
      - meadow
      - orchard
      - vineyard
      - grassy_orchard
      - grassy_vineyard
      type: string
    CropFertilizationRequirement:
      type: object
      properties:
        crop:
          allOf:
          - $ref: '#/components/schemas/CropEnum'
          description: |-
            * `grain_corn` - granella di mais
            * `silage_corn` - mais insilato
            * `wheat` - frumento
            * `soy` - soia
            * `alfalfa` - erba medica
            * `meadow` - prato
            * `orchard` - frutteto
            * `vineyard` - vigneto
            * `grassy_orchard` - frutteto inerbito
            * `grassy_vineyard` - vigneto inerbito
          title: Coltura
        low:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        high:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        notes:
          type: string
          title: Note
      required:
      - crop
      - high
      - low
    CropFertilizationRequirementsListErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    CropFertilizationRequirementsRetrieveErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    CropsListErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    Culture:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        order:
          type: integer
          readOnly: true
        crop:
          allOf:
          - $ref: '#/components/schemas/CropEnum'
          description: |-
            * `grain_corn` - granella di mais
            * `silage_corn` - mais insilato
            * `wheat` - frumento
            * `soy` - soia
            * `alfalfa` - erba medica
            * `meadow` - prato
            * `orchard` - frutteto
            * `vineyard` - vigneto
            * `grassy_orchard` - frutteto inerbito
            * `grassy_vineyard` - vigneto inerbito
          title: Coltura
        duration:
          type: integer
          maximum: 20
          minimum: 0
          title: Durata
        residues:
          type: boolean
          title: Residui lasciati
        land_management:
          allOf:
          - $ref: '#/components/schemas/LandManagementEnum'
          description: |-
            * `conventional` - convenzionale
            * `reduced` - ridotta
            * `direct_sowing` - semina su sodo
            * `organic` - biologica
          title: Gestione del terreno
        fertilizer:
          description: |-
            * `sewage` - liquame
            * `compost` - compost
            * `digestate` - digestato
            * `mineral` - minerale
          nullable: true
          title: Fertilizzante
          oneOf:
          - $ref: '#/components/schemas/FertilizerEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        added_minerals:
          type: boolean
          title: Minerali aggiunti
        fertilization_level:
          allOf:
          - $ref: '#/components/schemas/FertilizationLevelEnum'
          description: |-
            * `low` - low
            * `high` - high
          title: Livello di fertilizzazione
        cover:
          type: boolean
          title: Applicazione cover
        system:
          type: integer
          title: Sistema colturale
      required:
      - crop
      - id
      - order
      - system
    CultureData:
      type: object
      properties:
        fertilizers_intake:
          type: number
          format: double
          default: 0.0
        mineral_fertilizer_losses:
          type: number
          format: double
          default: 0.0
        production_reduction:
          type: number
          format: double
          default: 0.0
        crop_intake:
          type: number
          format: double
          default: 0.0
        mineralization_coefficient:
          type: number
          format: double
          default: 0.0
        carbon_from_soil:
          type: number
          format: double
          default: 0.0
        mineralized_carbon:
          type: number
          format: double
          default: 0.0
        carbon_balance:
          type: number
          format: double
          default: 0.0
        soil_carbon_change:
          type: number
          format: double
          default: 0.0
        consumption:
          type: number
          format: double
          default: 0.0
    CultureIn:
      type: object
      properties:
        order:
          type: integer
          readOnly: true
        crop:
          allOf:
          - $ref: '#/components/schemas/CropEnum'
          description: |-
            * `grain_corn` - granella di mais
            * `silage_corn` - mais insilato
            * `wheat` - frumento
            * `soy` - soia
            * `alfalfa` - erba medica
            * `meadow` - prato
            * `orchard` - frutteto
            * `vineyard` - vigneto
            * `grassy_orchard` - frutteto inerbito
            * `grassy_vineyard` - vigneto inerbito
          title: Coltura
        duration:
          type: integer
          maximum: 20
          minimum: 0
          title: Durata
        residues:
          type: boolean
          title: Residui lasciati
        land_management:
          allOf:
          - $ref: '#/components/schemas/LandManagementEnum'
          description: |-
            * `conventional` - convenzionale
            * `reduced` - ridotta
            * `direct_sowing` - semina su sodo
            * `organic` - biologica
          title: Gestione del terreno
        fertilizer:
          description: |-
            * `sewage` - liquame
            * `compost` - compost
            * `digestate` - digestato
            * `mineral` - minerale
          nullable: true
          title: Fertilizzante
          oneOf:
          - $ref: '#/components/schemas/FertilizerEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        added_minerals:
          type: boolean
          title: Minerali aggiunti
        fertilization_level:
          allOf:
          - $ref: '#/components/schemas/FertilizationLevelEnum'
          description: |-
            * `low` - low
            * `high` - high
          title: Livello di fertilizzazione
        cover:
          type: boolean
          title: Applicazione cover
        system:
          type: integer
          title: Sistema colturale
      required:
      - crop
      - order
      - system
    CultureReferenceConsumption:
      type: object
      properties:
        crop:
          allOf:
          - $ref: '#/components/schemas/CropEnum'
          description: |-
            * `grain_corn` - granella di mais
            * `silage_corn` - mais insilato
            * `wheat` - frumento
            * `soy` - soia
            * `alfalfa` - erba medica
            * `meadow` - prato
            * `orchard` - frutteto
            * `vineyard` - vigneto
            * `grassy_orchard` - frutteto inerbito
            * `grassy_vineyard` - vigneto inerbito
          title: Coltura
        residues:
          type: boolean
          default: false
          title: Residui lasciati
        land_management:
          allOf:
          - $ref: '#/components/schemas/LandManagementEnum'
          description: |-
            * `conventional` - convenzionale
            * `reduced` - ridotta
            * `direct_sowing` - semina su sodo
            * `organic` - biologica
          default: conventional
          title: Gestione del terreno
        fertilizer:
          description: |-
            * `sewage` - liquame
            * `compost` - compost
            * `digestate` - digestato
            * `mineral` - minerale
          nullable: true
          title: Fertilizzante
          oneOf:
          - $ref: '#/components/schemas/FertilizerEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        added_minerals:
          type: boolean
          default: false
          title: Minerali aggiunti
        fertilization_level:
          allOf:
          - $ref: '#/components/schemas/FertilizationLevelEnum'
          description: |-
            * `low` - low
            * `high` - high
          default: low
          title: Livello di fertilizzazione
        cover:
          type: boolean
          default: false
        processing:
          allOf:
          - $ref: '#/components/schemas/ProcessingEnum'
          description: |-
            * `plowing` - aratura
            * `arrowing` - erpicatura
            * `sowing` - semina
            * `direct_sowing` - semina su sodo
            * `weeding` - diserbo
            * `treshing` - trebbiatura
            * `corn_treshing` - trabbiatura mais
            * `waste_water` - reflui
            * `straw_shredding` - triciatura paglia
            * `stalk_chopping` - trinciatura stocchi
            * `straw_packing` - imballatura paglia
            * `stalk_packing` - imballatura stocchi
            * `irrigation` - irrigazione
            * `drying` - essicazione
            * `mineral_fertilization` - fertilizzazione minerale
            * `organic_fertilization` - fertilizzazione organica
            * `silage_collection` - raccolta trinciato
            * `haying` - fienagione
            * `trimming` - potatura
            * `vine_shoot` - sarmenti
            * `vine_treatments` - trattamenti vite
            * `grassing` - inerbimento
            * `grape_harvesting` - raccolta vite
            * `tree_treatments` - trattementi alberi
            * `cover_sowing` - semina cover
          title: Processo
        fuel_consumption:
          type: number
          format: double
          title: Consumo di carburante
      required:
      - crop
      - fertilizer
      - processing
    CultureReferenceConsumptionsListErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    CultureReferenceConsumptionsRetrieveErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    CultureValidationError:
      type: object
      properties:
        type:
          type: string
          maxLength: 40
        errors:
          type: array
          items:
            $ref: '#/components/schemas/CultureValidationErrorDetail'
      required:
      - errors
      - type
    CultureValidationErrorDetail:
      type: object
      properties:
        code:
          type: string
          maxLength: 40
        detail:
          type: string
          maxLength: 255
      required:
      - code
      - detail
    CulturesCreateAddedMineralsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - added_minerals
          type: string
          description: '* `added_minerals` - added_minerals'
        code:
          enum:
          - invalid
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CulturesCreateCoverErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - cover
          type: string
          description: '* `cover` - cover'
        code:
          enum:
          - invalid
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CulturesCreateCropErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - crop
          type: string
          description: '* `crop` - crop'
        code:
          enum:
          - invalid_choice
          - 'null'
          - required
          type: string
          description: |-
            * `invalid_choice` - invalid_choice
            * `null` - null
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CulturesCreateDurationErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - duration
          type: string
          description: '* `duration` - duration'
        code:
          enum:
          - invalid
          - max_string_length
          - max_value
          - min_value
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `max_string_length` - max_string_length
            * `max_value` - max_value
            * `min_value` - min_value
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CulturesCreateError:
      oneOf:
      - $ref: '#/components/schemas/CulturesCreateNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/CulturesCreateCropErrorComponent'
      - $ref: '#/components/schemas/CulturesCreateDurationErrorComponent'
      - $ref: '#/components/schemas/CulturesCreateResiduesErrorComponent'
      - $ref: '#/components/schemas/CulturesCreateLandManagementErrorComponent'
      - $ref: '#/components/schemas/CulturesCreateFertilizerErrorComponent'
      - $ref: '#/components/schemas/CulturesCreateAddedMineralsErrorComponent'
      - $ref: '#/components/schemas/CulturesCreateFertilizationLevelErrorComponent'
      - $ref: '#/components/schemas/CulturesCreateCoverErrorComponent'
      - $ref: '#/components/schemas/CulturesCreateSystemErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/CulturesCreateNonFieldErrorsErrorComponent'
          crop: '#/components/schemas/CulturesCreateCropErrorComponent'
          duration: '#/components/schemas/CulturesCreateDurationErrorComponent'
          residues: '#/components/schemas/CulturesCreateResiduesErrorComponent'
          land_management: '#/components/schemas/CulturesCreateLandManagementErrorComponent'
          fertilizer: '#/components/schemas/CulturesCreateFertilizerErrorComponent'
          added_minerals: '#/components/schemas/CulturesCreateAddedMineralsErrorComponent'
          fertilization_level: '#/components/schemas/CulturesCreateFertilizationLevelErrorComponent'
          cover: '#/components/schemas/CulturesCreateCoverErrorComponent'
          system: '#/components/schemas/CulturesCreateSystemErrorComponent'
    CulturesCreateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/CulturesCreateValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/CulturesCreateValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    CulturesCreateFertilizationLevelErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - fertilization_level
          type: string
          description: '* `fertilization_level` - fertilization_level'
        code:
          enum:
          - invalid_choice
          - 'null'
          type: string
          description: |-
            * `invalid_choice` - invalid_choice
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CulturesCreateFertilizerErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - fertilizer
          type: string
          description: '* `fertilizer` - fertilizer'
        code:
          enum:
          - invalid_choice
          type: string
          description: '* `invalid_choice` - invalid_choice'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CulturesCreateLandManagementErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - land_management
          type: string
          description: '* `land_management` - land_management'
        code:
          enum:
          - invalid_choice
          - 'null'
          type: string
          description: |-
            * `invalid_choice` - invalid_choice
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CulturesCreateNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CulturesCreateResiduesErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - residues
          type: string
          description: '* `residues` - residues'
        code:
          enum:
          - invalid
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CulturesCreateSystemErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - system
          type: string
          description: '* `system` - system'
        code:
          enum:
          - does_not_exist
          - incorrect_type
          - 'null'
          - required
          type: string
          description: |-
            * `does_not_exist` - does_not_exist
            * `incorrect_type` - incorrect_type
            * `null` - null
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CulturesCreateValidationError:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ValidationErrorEnum'
          description: '* `validation_error` - Validation Error'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/CulturesCreateError'
      required:
      - errors
      - type
    CulturesDestroyErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    CulturesListErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    CulturesPartialUpdateAddedMineralsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - added_minerals
          type: string
          description: '* `added_minerals` - added_minerals'
        code:
          enum:
          - invalid
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CulturesPartialUpdateCoverErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - cover
          type: string
          description: '* `cover` - cover'
        code:
          enum:
          - invalid
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CulturesPartialUpdateCropErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - crop
          type: string
          description: '* `crop` - crop'
        code:
          enum:
          - invalid_choice
          - 'null'
          - required
          type: string
          description: |-
            * `invalid_choice` - invalid_choice
            * `null` - null
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CulturesPartialUpdateDurationErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - duration
          type: string
          description: '* `duration` - duration'
        code:
          enum:
          - invalid
          - max_string_length
          - max_value
          - min_value
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `max_string_length` - max_string_length
            * `max_value` - max_value
            * `min_value` - min_value
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CulturesPartialUpdateError:
      oneOf:
      - $ref: '#/components/schemas/CulturesPartialUpdateNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/CulturesPartialUpdateCropErrorComponent'
      - $ref: '#/components/schemas/CulturesPartialUpdateDurationErrorComponent'
      - $ref: '#/components/schemas/CulturesPartialUpdateResiduesErrorComponent'
      - $ref: '#/components/schemas/CulturesPartialUpdateLandManagementErrorComponent'
      - $ref: '#/components/schemas/CulturesPartialUpdateFertilizerErrorComponent'
      - $ref: '#/components/schemas/CulturesPartialUpdateAddedMineralsErrorComponent'
      - $ref: '#/components/schemas/CulturesPartialUpdateFertilizationLevelErrorComponent'
      - $ref: '#/components/schemas/CulturesPartialUpdateCoverErrorComponent'
      - $ref: '#/components/schemas/CulturesPartialUpdateSystemErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/CulturesPartialUpdateNonFieldErrorsErrorComponent'
          crop: '#/components/schemas/CulturesPartialUpdateCropErrorComponent'
          duration: '#/components/schemas/CulturesPartialUpdateDurationErrorComponent'
          residues: '#/components/schemas/CulturesPartialUpdateResiduesErrorComponent'
          land_management: '#/components/schemas/CulturesPartialUpdateLandManagementErrorComponent'
          fertilizer: '#/components/schemas/CulturesPartialUpdateFertilizerErrorComponent'
          added_minerals: '#/components/schemas/CulturesPartialUpdateAddedMineralsErrorComponent'
          fertilization_level: '#/components/schemas/CulturesPartialUpdateFertilizationLevelErrorComponent'
          cover: '#/components/schemas/CulturesPartialUpdateCoverErrorComponent'
          system: '#/components/schemas/CulturesPartialUpdateSystemErrorComponent'
    CulturesPartialUpdateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/CulturesPartialUpdateValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/CulturesPartialUpdateValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    CulturesPartialUpdateFertilizationLevelErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - fertilization_level
          type: string
          description: '* `fertilization_level` - fertilization_level'
        code:
          enum:
          - invalid_choice
          - 'null'
          type: string
          description: |-
            * `invalid_choice` - invalid_choice
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CulturesPartialUpdateFertilizerErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - fertilizer
          type: string
          description: '* `fertilizer` - fertilizer'
        code:
          enum:
          - invalid_choice
          type: string
          description: '* `invalid_choice` - invalid_choice'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CulturesPartialUpdateLandManagementErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - land_management
          type: string
          description: '* `land_management` - land_management'
        code:
          enum:
          - invalid_choice
          - 'null'
          type: string
          description: |-
            * `invalid_choice` - invalid_choice
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CulturesPartialUpdateNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CulturesPartialUpdateResiduesErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - residues
          type: string
          description: '* `residues` - residues'
        code:
          enum:
          - invalid
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CulturesPartialUpdateSystemErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - system
          type: string
          description: '* `system` - system'
        code:
          enum:
          - does_not_exist
          - incorrect_type
          - 'null'
          - required
          type: string
          description: |-
            * `does_not_exist` - does_not_exist
            * `incorrect_type` - incorrect_type
            * `null` - null
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CulturesPartialUpdateValidationError:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ValidationErrorEnum'
          description: '* `validation_error` - Validation Error'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/CulturesPartialUpdateError'
      required:
      - errors
      - type
    CulturesRetrieveErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    CulturesUpdateAddedMineralsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - added_minerals
          type: string
          description: '* `added_minerals` - added_minerals'
        code:
          enum:
          - invalid
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CulturesUpdateCoverErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - cover
          type: string
          description: '* `cover` - cover'
        code:
          enum:
          - invalid
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CulturesUpdateCropErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - crop
          type: string
          description: '* `crop` - crop'
        code:
          enum:
          - invalid_choice
          - 'null'
          - required
          type: string
          description: |-
            * `invalid_choice` - invalid_choice
            * `null` - null
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CulturesUpdateDurationErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - duration
          type: string
          description: '* `duration` - duration'
        code:
          enum:
          - invalid
          - max_string_length
          - max_value
          - min_value
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `max_string_length` - max_string_length
            * `max_value` - max_value
            * `min_value` - min_value
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CulturesUpdateError:
      oneOf:
      - $ref: '#/components/schemas/CulturesUpdateNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/CulturesUpdateCropErrorComponent'
      - $ref: '#/components/schemas/CulturesUpdateDurationErrorComponent'
      - $ref: '#/components/schemas/CulturesUpdateResiduesErrorComponent'
      - $ref: '#/components/schemas/CulturesUpdateLandManagementErrorComponent'
      - $ref: '#/components/schemas/CulturesUpdateFertilizerErrorComponent'
      - $ref: '#/components/schemas/CulturesUpdateAddedMineralsErrorComponent'
      - $ref: '#/components/schemas/CulturesUpdateFertilizationLevelErrorComponent'
      - $ref: '#/components/schemas/CulturesUpdateCoverErrorComponent'
      - $ref: '#/components/schemas/CulturesUpdateSystemErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/CulturesUpdateNonFieldErrorsErrorComponent'
          crop: '#/components/schemas/CulturesUpdateCropErrorComponent'
          duration: '#/components/schemas/CulturesUpdateDurationErrorComponent'
          residues: '#/components/schemas/CulturesUpdateResiduesErrorComponent'
          land_management: '#/components/schemas/CulturesUpdateLandManagementErrorComponent'
          fertilizer: '#/components/schemas/CulturesUpdateFertilizerErrorComponent'
          added_minerals: '#/components/schemas/CulturesUpdateAddedMineralsErrorComponent'
          fertilization_level: '#/components/schemas/CulturesUpdateFertilizationLevelErrorComponent'
          cover: '#/components/schemas/CulturesUpdateCoverErrorComponent'
          system: '#/components/schemas/CulturesUpdateSystemErrorComponent'
    CulturesUpdateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/CulturesUpdateValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/CulturesUpdateValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    CulturesUpdateFertilizationLevelErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - fertilization_level
          type: string
          description: '* `fertilization_level` - fertilization_level'
        code:
          enum:
          - invalid_choice
          - 'null'
          type: string
          description: |-
            * `invalid_choice` - invalid_choice
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CulturesUpdateFertilizerErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - fertilizer
          type: string
          description: '* `fertilizer` - fertilizer'
        code:
          enum:
          - invalid_choice
          type: string
          description: '* `invalid_choice` - invalid_choice'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CulturesUpdateLandManagementErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - land_management
          type: string
          description: '* `land_management` - land_management'
        code:
          enum:
          - invalid_choice
          - 'null'
          type: string
          description: |-
            * `invalid_choice` - invalid_choice
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CulturesUpdateNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CulturesUpdateResiduesErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - residues
          type: string
          description: '* `residues` - residues'
        code:
          enum:
          - invalid
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CulturesUpdateSystemErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - system
          type: string
          description: '* `system` - system'
        code:
          enum:
          - does_not_exist
          - incorrect_type
          - 'null'
          - required
          type: string
          description: |-
            * `does_not_exist` - does_not_exist
            * `incorrect_type` - incorrect_type
            * `null` - null
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CulturesUpdateValidationError:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ValidationErrorEnum'
          description: '* `validation_error` - Validation Error'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/CulturesUpdateError'
      required:
      - errors
      - type
    CulturesValidateCreateAddedMineralsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - added_minerals
          type: string
          description: '* `added_minerals` - added_minerals'
        code:
          enum:
          - invalid
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CulturesValidateCreateCoverErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - cover
          type: string
          description: '* `cover` - cover'
        code:
          enum:
          - invalid
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CulturesValidateCreateCropErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - crop
          type: string
          description: '* `crop` - crop'
        code:
          enum:
          - invalid_choice
          - 'null'
          - required
          type: string
          description: |-
            * `invalid_choice` - invalid_choice
            * `null` - null
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CulturesValidateCreateDurationErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - duration
          type: string
          description: '* `duration` - duration'
        code:
          enum:
          - invalid
          - max_string_length
          - max_value
          - min_value
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `max_string_length` - max_string_length
            * `max_value` - max_value
            * `min_value` - min_value
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CulturesValidateCreateError:
      oneOf:
      - $ref: '#/components/schemas/CulturesValidateCreateNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/CulturesValidateCreateCropErrorComponent'
      - $ref: '#/components/schemas/CulturesValidateCreateDurationErrorComponent'
      - $ref: '#/components/schemas/CulturesValidateCreateResiduesErrorComponent'
      - $ref: '#/components/schemas/CulturesValidateCreateLandManagementErrorComponent'
      - $ref: '#/components/schemas/CulturesValidateCreateFertilizerErrorComponent'
      - $ref: '#/components/schemas/CulturesValidateCreateAddedMineralsErrorComponent'
      - $ref: '#/components/schemas/CulturesValidateCreateFertilizationLevelErrorComponent'
      - $ref: '#/components/schemas/CulturesValidateCreateCoverErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/CulturesValidateCreateNonFieldErrorsErrorComponent'
          crop: '#/components/schemas/CulturesValidateCreateCropErrorComponent'
          duration: '#/components/schemas/CulturesValidateCreateDurationErrorComponent'
          residues: '#/components/schemas/CulturesValidateCreateResiduesErrorComponent'
          land_management: '#/components/schemas/CulturesValidateCreateLandManagementErrorComponent'
          fertilizer: '#/components/schemas/CulturesValidateCreateFertilizerErrorComponent'
          added_minerals: '#/components/schemas/CulturesValidateCreateAddedMineralsErrorComponent'
          fertilization_level: '#/components/schemas/CulturesValidateCreateFertilizationLevelErrorComponent'
          cover: '#/components/schemas/CulturesValidateCreateCoverErrorComponent'
    CulturesValidateCreateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/CulturesValidateCreateValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/CulturesValidateCreateValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    CulturesValidateCreateFertilizationLevelErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - fertilization_level
          type: string
          description: '* `fertilization_level` - fertilization_level'
        code:
          enum:
          - invalid_choice
          - 'null'
          type: string
          description: |-
            * `invalid_choice` - invalid_choice
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CulturesValidateCreateFertilizerErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - fertilizer
          type: string
          description: '* `fertilizer` - fertilizer'
        code:
          enum:
          - invalid_choice
          type: string
          description: '* `invalid_choice` - invalid_choice'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CulturesValidateCreateLandManagementErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - land_management
          type: string
          description: '* `land_management` - land_management'
        code:
          enum:
          - invalid_choice
          - 'null'
          type: string
          description: |-
            * `invalid_choice` - invalid_choice
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CulturesValidateCreateNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CulturesValidateCreateResiduesErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - residues
          type: string
          description: '* `residues` - residues'
        code:
          enum:
          - invalid
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CulturesValidateCreateValidationError:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ValidationErrorEnum'
          description: '* `validation_error` - Validation Error'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/CulturesValidateCreateError'
      required:
      - errors
      - type
    CustomTokenObtainPair:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
          writeOnly: true
      required:
      - password
      - username
    Error404:
      type: object
      properties:
        code:
          allOf:
          - $ref: '#/components/schemas/ErrorCode404Enum'
          description: '* `not_found` - Not Found'
        detail:
          type: string
        attr:
          type: string
          nullable: true
      required:
      - attr
      - code
      - detail
    Error409:
      type: object
      properties:
        code:
          allOf:
          - $ref: '#/components/schemas/Error409CodeEnum'
          description: '* `conflict` - Conflict'
        detail:
          type: string
        attr:
          type: string
          nullable: true
      required:
      - attr
      - code
      - detail
    Error409CodeEnum:
      enum:
      - conflict
      type: string
    Error422:
      type: object
      properties:
        code:
          allOf:
          - $ref: '#/components/schemas/Error422CodeEnum'
          description: '* `unprocessable_entity` - Unprocessable Entity'
        detail:
          type: string
        attr:
          type: string
          nullable: true
      required:
      - attr
      - code
      - detail
    Error422CodeEnum:
      enum:
      - unprocessable_entity
      type: string
    ErrorCode404Enum:
      enum:
      - not_found
      type: string
    ErrorResponse404:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ClientErrorEnum'
          description: '* `client_error` - Client Error'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error404'
      required:
      - errors
      - type
    ErrorResponse409:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ServerErrorEnum'
          description: '* `server_error` - Server Error'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error409'
      required:
      - errors
      - type
    ErrorResponse422:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ServerErrorEnum'
          description: '* `server_error` - Server Error'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error422'
      required:
      - errors
      - type
    Farm:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Nome
          maxLength: 255
        vat_number:
          type: string
          nullable: true
          maxLength: 16
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: Creato il
        last_modified:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - last_modified
      - name
    FarmIn:
      type: object
      properties:
        name:
          type: string
          title: Nome
          maxLength: 255
        vat_number:
          type: string
          nullable: true
          maxLength: 16
      required:
      - name
    FarmLandPlotIn:
      type: object
      properties:
        name:
          type: string
          nullable: true
          title: Nome
          maxLength: 255
        land_area:
          type: number
          format: double
          nullable: true
          title: Area terreno
        areal:
          allOf:
          - $ref: '#/components/schemas/ArealEnum'
          description: |-
            * `north` - nord
            * `center` - centro
            * `south` - sud
            * `AG` - Agrigento
            * `AL` - Alessandria
            * `AN` - Ancona
            * `AO` - Aosta
            * `AR` - Arezzo
            * `AP` - Ascoli Piceno
            * `AT` - Asti
            * `AV` - Avellino
            * `BA` - Bari
            * `BT` - Barletta-Andria-Trani
            * `BL` - Belluno
            * `BN` - Benevento
            * `BG` - Bergamo
            * `BI` - Biella
            * `BO` - Bologna
            * `BZ` - Bolzano/Bozen
            * `BS` - Brescia
            * `BR` - Brindisi
            * `CA` - Cagliari
            * `CL` - Caltanissetta
            * `CB` - Campobasso
            * `CE` - Caserta
            * `CT` - Catania
            * `CZ` - Catanzaro
            * `CH` - Chieti
            * `CO` - Como
            * `CS` - Cosenza
            * `CR` - Cremona
            * `KR` - Crotone
            * `CN` - Cuneo
            * `EN` - Enna
            * `FM` - Fermo
            * `FE` - Ferrara
            * `FI` - Firenze
            * `FG` - Foggia
            * `FC` - Forlì-Cesena
            * `FR` - Frosinone
            * `GE` - Genova
            * `GO` - Gorizia
            * `GR` - Grosseto
            * `IM` - Imperia
            * `IS` - Isernia
            * `SP` - La Spezia
            * `AQ` - L’Aquila
            * `LT` - Latina
            * `LE` - Lecce
            * `LC` - Lecco
            * `LI` - Livorno
            * `LO` - Lodi
            * `LU` - Lucca
            * `MC` - Macerata
            * `MN` - Mantova
            * `MS` - Massa-Carrara
            * `MT` - Matera
            * `ME` - Messina
            * `MI` - Milano
            * `MO` - Modena
            * `MB` - Monza e Brianza
            * `NA` - Napoli
            * `NO` - Novara
            * `NU` - Nuoro
            * `OR` - Oristano
            * `PD` - Padova
            * `PA` - Palermo
            * `PR` - Parma
            * `PV` - Pavia
            * `PG` - Perugia
            * `PU` - Pesaro e Urbino
            * `PE` - Pescara
            * `PC` - Piacenza
            * `PI` - Pisa
            * `PT` - Pistoia
            * `PN` - Pordenone
            * `PZ` - Potenza
            * `PO` - Prato
            * `RG` - Ragusa
            * `RA` - Ravenna
            * `RC` - Reggio Calabria
            * `RE` - Reggio Emilia
            * `RI` - Rieti
            * `RN` - Rimini
            * `RM` - Roma
            * `RO` - Rovigo
            * `SA` - Salerno
            * `SS` - Sassari
            * `SV` - Savona
            * `SI` - Siena
            * `SR` - Siracusa
            * `SO` - Sondrio
            * `SU` - Sud Sardegna
            * `TA` - Taranto
            * `TE` - Teramo
            * `TR` - Terni
            * `TO` - Torino
            * `TP` - Trapani
            * `TN` - Trento
            * `TV` - Treviso
            * `TS` - Trieste
            * `UD` - Udine
            * `VA` - Varese
            * `VE` - Venezia
            * `VB` - Verbano Cusio Ossola
            * `VC` - Vercelli
            * `VR` - Verona
            * `VV` - Vibo Valentia
            * `VI` - Vicenza
            * `VT` - Viterbo
          title: Areale
        soil_granularity:
          allOf:
          - $ref: '#/components/schemas/SoilGranularityEnum'
          description: |-
            * `coarse` - coarse
            * `medium` - medium
            * `medium_fine` - medium-fine
            * `fine` - fine
            * `very_fine` - very fine
          title: Suolo
        organic_content_level:
          allOf:
          - $ref: '#/components/schemas/OrganicContentLevelEnum'
          description: |-
            * `low` - low
            * `medium` - medium
            * `high` - high
          title: Contenuto SO
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: Creato il
        last_modified:
          type: string
          format: date-time
          readOnly: true
        baseline:
          type: integer
          nullable: true
      required:
      - created_at
      - last_modified
    FarmSystemIn:
      type: object
      properties:
        name:
          type: string
          title: Nome
          maxLength: 255
        baseline:
          type: boolean
        duration:
          type: integer
          description: Retrieve the duration as the sum of each system's culture duration.
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: Creato il
        last_modified:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - duration
      - last_modified
    FarmsCreateError:
      oneOf:
      - $ref: '#/components/schemas/FarmsCreateNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/FarmsCreateNameErrorComponent'
      - $ref: '#/components/schemas/FarmsCreateVatNumberErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/FarmsCreateNonFieldErrorsErrorComponent'
          name: '#/components/schemas/FarmsCreateNameErrorComponent'
          vat_number: '#/components/schemas/FarmsCreateVatNumberErrorComponent'
    FarmsCreateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/FarmsCreateValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/FarmsCreateValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    FarmsCreateNameErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - name
          type: string
          description: '* `name` - name'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    FarmsCreateNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    FarmsCreateValidationError:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ValidationErrorEnum'
          description: '* `validation_error` - Validation Error'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/FarmsCreateError'
      required:
      - errors
      - type
    FarmsCreateVatNumberErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - vat_number
          type: string
          description: '* `vat_number` - vat_number'
        code:
          enum:
          - invalid
          - max_length
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          - unique
          type: string
          description: |-
            * `invalid` - invalid
            * `max_length` - max_length
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
            * `unique` - unique
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    FarmsDestroyErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    FarmsLandplotsCreateArealErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - areal
          type: string
          description: '* `areal` - areal'
        code:
          enum:
          - invalid_choice
          - 'null'
          type: string
          description: |-
            * `invalid_choice` - invalid_choice
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    FarmsLandplotsCreateBaselineErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - baseline
          type: string
          description: '* `baseline` - baseline'
        code:
          enum:
          - does_not_exist
          - incorrect_type
          type: string
          description: |-
            * `does_not_exist` - does_not_exist
            * `incorrect_type` - incorrect_type
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    FarmsLandplotsCreateError:
      oneOf:
      - $ref: '#/components/schemas/FarmsLandplotsCreateNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/FarmsLandplotsCreateNameErrorComponent'
      - $ref: '#/components/schemas/FarmsLandplotsCreateLandAreaErrorComponent'
      - $ref: '#/components/schemas/FarmsLandplotsCreateArealErrorComponent'
      - $ref: '#/components/schemas/FarmsLandplotsCreateSoilGranularityErrorComponent'
      - $ref: '#/components/schemas/FarmsLandplotsCreateOrganicContentLevelErrorComponent'
      - $ref: '#/components/schemas/FarmsLandplotsCreateBaselineErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/FarmsLandplotsCreateNonFieldErrorsErrorComponent'
          name: '#/components/schemas/FarmsLandplotsCreateNameErrorComponent'
          land_area: '#/components/schemas/FarmsLandplotsCreateLandAreaErrorComponent'
          areal: '#/components/schemas/FarmsLandplotsCreateArealErrorComponent'
          soil_granularity: '#/components/schemas/FarmsLandplotsCreateSoilGranularityErrorComponent'
          organic_content_level: '#/components/schemas/FarmsLandplotsCreateOrganicContentLevelErrorComponent'
          baseline: '#/components/schemas/FarmsLandplotsCreateBaselineErrorComponent'
    FarmsLandplotsCreateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/FarmsLandplotsCreateValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/FarmsLandplotsCreateValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    FarmsLandplotsCreateLandAreaErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - land_area
          type: string
          description: '* `land_area` - land_area'
        code:
          enum:
          - invalid
          - max_string_length
          type: string
          description: |-
            * `invalid` - invalid
            * `max_string_length` - max_string_length
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    FarmsLandplotsCreateNameErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - name
          type: string
          description: '* `name` - name'
        code:
          enum:
          - invalid
          - max_length
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `invalid` - invalid
            * `max_length` - max_length
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    FarmsLandplotsCreateNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    FarmsLandplotsCreateOrganicContentLevelErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - organic_content_level
          type: string
          description: '* `organic_content_level` - organic_content_level'
        code:
          enum:
          - invalid_choice
          - 'null'
          type: string
          description: |-
            * `invalid_choice` - invalid_choice
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    FarmsLandplotsCreateSoilGranularityErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - soil_granularity
          type: string
          description: '* `soil_granularity` - soil_granularity'
        code:
          enum:
          - invalid_choice
          - 'null'
          type: string
          description: |-
            * `invalid_choice` - invalid_choice
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    FarmsLandplotsCreateValidationError:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ValidationErrorEnum'
          description: '* `validation_error` - Validation Error'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/FarmsLandplotsCreateError'
      required:
      - errors
      - type
    FarmsLandplotsListErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    FarmsListErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    FarmsPartialUpdateError:
      oneOf:
      - $ref: '#/components/schemas/FarmsPartialUpdateNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/FarmsPartialUpdateNameErrorComponent'
      - $ref: '#/components/schemas/FarmsPartialUpdateVatNumberErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/FarmsPartialUpdateNonFieldErrorsErrorComponent'
          name: '#/components/schemas/FarmsPartialUpdateNameErrorComponent'
          vat_number: '#/components/schemas/FarmsPartialUpdateVatNumberErrorComponent'
    FarmsPartialUpdateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/FarmsPartialUpdateValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/FarmsPartialUpdateValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    FarmsPartialUpdateNameErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - name
          type: string
          description: '* `name` - name'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    FarmsPartialUpdateNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    FarmsPartialUpdateValidationError:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ValidationErrorEnum'
          description: '* `validation_error` - Validation Error'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/FarmsPartialUpdateError'
      required:
      - errors
      - type
    FarmsPartialUpdateVatNumberErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - vat_number
          type: string
          description: '* `vat_number` - vat_number'
        code:
          enum:
          - invalid
          - max_length
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          - unique
          type: string
          description: |-
            * `invalid` - invalid
            * `max_length` - max_length
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
            * `unique` - unique
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    FarmsRetrieveErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    FarmsSystemsCreateBaselineErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - baseline
          type: string
          description: '* `baseline` - baseline'
        code:
          enum:
          - invalid
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    FarmsSystemsCreateError:
      oneOf:
      - $ref: '#/components/schemas/FarmsSystemsCreateNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/FarmsSystemsCreateNameErrorComponent'
      - $ref: '#/components/schemas/FarmsSystemsCreateBaselineErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/FarmsSystemsCreateNonFieldErrorsErrorComponent'
          name: '#/components/schemas/FarmsSystemsCreateNameErrorComponent'
          baseline: '#/components/schemas/FarmsSystemsCreateBaselineErrorComponent'
    FarmsSystemsCreateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/FarmsSystemsCreateValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/FarmsSystemsCreateValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    FarmsSystemsCreateNameErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - name
          type: string
          description: '* `name` - name'
        code:
          enum:
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    FarmsSystemsCreateNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    FarmsSystemsCreateValidationError:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ValidationErrorEnum'
          description: '* `validation_error` - Validation Error'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/FarmsSystemsCreateError'
      required:
      - errors
      - type
    FarmsSystemsListErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    FarmsUpdateError:
      oneOf:
      - $ref: '#/components/schemas/FarmsUpdateNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/FarmsUpdateNameErrorComponent'
      - $ref: '#/components/schemas/FarmsUpdateVatNumberErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/FarmsUpdateNonFieldErrorsErrorComponent'
          name: '#/components/schemas/FarmsUpdateNameErrorComponent'
          vat_number: '#/components/schemas/FarmsUpdateVatNumberErrorComponent'
    FarmsUpdateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/FarmsUpdateValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/FarmsUpdateValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    FarmsUpdateNameErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - name
          type: string
          description: '* `name` - name'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    FarmsUpdateNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    FarmsUpdateValidationError:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ValidationErrorEnum'
          description: '* `validation_error` - Validation Error'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/FarmsUpdateError'
      required:
      - errors
      - type
    FarmsUpdateVatNumberErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - vat_number
          type: string
          description: '* `vat_number` - vat_number'
        code:
          enum:
          - invalid
          - max_length
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          - unique
          type: string
          description: |-
            * `invalid` - invalid
            * `max_length` - max_length
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
            * `unique` - unique
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    FertilizationLevelEnum:
      enum:
      - low
      - high
      type: string
    FertilizerEnum:
      enum:
      - sewage
      - compost
      - digestate
      - mineral
      type: string
    FertilizersListErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    GranularityEnum:
      enum:
      - coarse
      - medium
      - medium_fine
      - fine
      - very_fine
      type: string
    LabeledChoices:
      type: object
      properties:
        header:
          type: string
          maxLength: 40
        choices:
          type: array
          items:
            $ref: '#/components/schemas/Choices'
          readOnly: true
        explain:
          type: string
          nullable: true
          maxLength: 255
      required:
      - choices
      - explain
      - header
    LandManagementEnum:
      enum:
      - conventional
      - reduced
      - direct_sowing
      - organic
      type: string
    LandManagementsListErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    LandPlot:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          nullable: true
          title: Nome
          maxLength: 255
        land_area:
          type: number
          format: double
          nullable: true
          title: Area terreno
        areal:
          allOf:
          - $ref: '#/components/schemas/ArealEnum'
          description: |-
            * `north` - nord
            * `center` - centro
            * `south` - sud
            * `AG` - Agrigento
            * `AL` - Alessandria
            * `AN` - Ancona
            * `AO` - Aosta
            * `AR` - Arezzo
            * `AP` - Ascoli Piceno
            * `AT` - Asti
            * `AV` - Avellino
            * `BA` - Bari
            * `BT` - Barletta-Andria-Trani
            * `BL` - Belluno
            * `BN` - Benevento
            * `BG` - Bergamo
            * `BI` - Biella
            * `BO` - Bologna
            * `BZ` - Bolzano/Bozen
            * `BS` - Brescia
            * `BR` - Brindisi
            * `CA` - Cagliari
            * `CL` - Caltanissetta
            * `CB` - Campobasso
            * `CE` - Caserta
            * `CT` - Catania
            * `CZ` - Catanzaro
            * `CH` - Chieti
            * `CO` - Como
            * `CS` - Cosenza
            * `CR` - Cremona
            * `KR` - Crotone
            * `CN` - Cuneo
            * `EN` - Enna
            * `FM` - Fermo
            * `FE` - Ferrara
            * `FI` - Firenze
            * `FG` - Foggia
            * `FC` - Forlì-Cesena
            * `FR` - Frosinone
            * `GE` - Genova
            * `GO` - Gorizia
            * `GR` - Grosseto
            * `IM` - Imperia
            * `IS` - Isernia
            * `SP` - La Spezia
            * `AQ` - L’Aquila
            * `LT` - Latina
            * `LE` - Lecce
            * `LC` - Lecco
            * `LI` - Livorno
            * `LO` - Lodi
            * `LU` - Lucca
            * `MC` - Macerata
            * `MN` - Mantova
            * `MS` - Massa-Carrara
            * `MT` - Matera
            * `ME` - Messina
            * `MI` - Milano
            * `MO` - Modena
            * `MB` - Monza e Brianza
            * `NA` - Napoli
            * `NO` - Novara
            * `NU` - Nuoro
            * `OR` - Oristano
            * `PD` - Padova
            * `PA` - Palermo
            * `PR` - Parma
            * `PV` - Pavia
            * `PG` - Perugia
            * `PU` - Pesaro e Urbino
            * `PE` - Pescara
            * `PC` - Piacenza
            * `PI` - Pisa
            * `PT` - Pistoia
            * `PN` - Pordenone
            * `PZ` - Potenza
            * `PO` - Prato
            * `RG` - Ragusa
            * `RA` - Ravenna
            * `RC` - Reggio Calabria
            * `RE` - Reggio Emilia
            * `RI` - Rieti
            * `RN` - Rimini
            * `RM` - Roma
            * `RO` - Rovigo
            * `SA` - Salerno
            * `SS` - Sassari
            * `SV` - Savona
            * `SI` - Siena
            * `SR` - Siracusa
            * `SO` - Sondrio
            * `SU` - Sud Sardegna
            * `TA` - Taranto
            * `TE` - Teramo
            * `TR` - Terni
            * `TO` - Torino
            * `TP` - Trapani
            * `TN` - Trento
            * `TV` - Treviso
            * `TS` - Trieste
            * `UD` - Udine
            * `VA` - Varese
            * `VE` - Venezia
            * `VB` - Verbano Cusio Ossola
            * `VC` - Vercelli
            * `VR` - Verona
            * `VV` - Vibo Valentia
            * `VI` - Vicenza
            * `VT` - Viterbo
          title: Areale
        soil_granularity:
          allOf:
          - $ref: '#/components/schemas/SoilGranularityEnum'
          description: |-
            * `coarse` - coarse
            * `medium` - medium
            * `medium_fine` - medium-fine
            * `fine` - fine
            * `very_fine` - very fine
          title: Suolo
        organic_content_level:
          allOf:
          - $ref: '#/components/schemas/OrganicContentLevelEnum'
          description: |-
            * `low` - low
            * `medium` - medium
            * `high` - high
          title: Contenuto SO
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: Creato il
        last_modified:
          type: string
          format: date-time
          readOnly: true
        farm:
          type: integer
          title: Azienda
        baseline:
          type: integer
          nullable: true
      required:
      - created_at
      - farm
      - id
      - last_modified
    LandPlotBaselineSystemIn:
      type: object
      properties:
        name:
          type: string
          title: Nome
          maxLength: 255
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: Creato il
        last_modified:
          type: string
          format: date-time
          readOnly: true
        duration:
          type: integer
          description: Retrieve the duration as the sum of each system's culture duration.
          readOnly: true
      required:
      - created_at
      - duration
      - last_modified
    LandPlotIn:
      type: object
      properties:
        name:
          type: string
          nullable: true
          title: Nome
          maxLength: 255
        land_area:
          type: number
          format: double
          nullable: true
          title: Area terreno
        areal:
          allOf:
          - $ref: '#/components/schemas/ArealEnum'
          description: |-
            * `north` - nord
            * `center` - centro
            * `south` - sud
            * `AG` - Agrigento
            * `AL` - Alessandria
            * `AN` - Ancona
            * `AO` - Aosta
            * `AR` - Arezzo
            * `AP` - Ascoli Piceno
            * `AT` - Asti
            * `AV` - Avellino
            * `BA` - Bari
            * `BT` - Barletta-Andria-Trani
            * `BL` - Belluno
            * `BN` - Benevento
            * `BG` - Bergamo
            * `BI` - Biella
            * `BO` - Bologna
            * `BZ` - Bolzano/Bozen
            * `BS` - Brescia
            * `BR` - Brindisi
            * `CA` - Cagliari
            * `CL` - Caltanissetta
            * `CB` - Campobasso
            * `CE` - Caserta
            * `CT` - Catania
            * `CZ` - Catanzaro
            * `CH` - Chieti
            * `CO` - Como
            * `CS` - Cosenza
            * `CR` - Cremona
            * `KR` - Crotone
            * `CN` - Cuneo
            * `EN` - Enna
            * `FM` - Fermo
            * `FE` - Ferrara
            * `FI` - Firenze
            * `FG` - Foggia
            * `FC` - Forlì-Cesena
            * `FR` - Frosinone
            * `GE` - Genova
            * `GO` - Gorizia
            * `GR` - Grosseto
            * `IM` - Imperia
            * `IS` - Isernia
            * `SP` - La Spezia
            * `AQ` - L’Aquila
            * `LT` - Latina
            * `LE` - Lecce
            * `LC` - Lecco
            * `LI` - Livorno
            * `LO` - Lodi
            * `LU` - Lucca
            * `MC` - Macerata
            * `MN` - Mantova
            * `MS` - Massa-Carrara
            * `MT` - Matera
            * `ME` - Messina
            * `MI` - Milano
            * `MO` - Modena
            * `MB` - Monza e Brianza
            * `NA` - Napoli
            * `NO` - Novara
            * `NU` - Nuoro
            * `OR` - Oristano
            * `PD` - Padova
            * `PA` - Palermo
            * `PR` - Parma
            * `PV` - Pavia
            * `PG` - Perugia
            * `PU` - Pesaro e Urbino
            * `PE` - Pescara
            * `PC` - Piacenza
            * `PI` - Pisa
            * `PT` - Pistoia
            * `PN` - Pordenone
            * `PZ` - Potenza
            * `PO` - Prato
            * `RG` - Ragusa
            * `RA` - Ravenna
            * `RC` - Reggio Calabria
            * `RE` - Reggio Emilia
            * `RI` - Rieti
            * `RN` - Rimini
            * `RM` - Roma
            * `RO` - Rovigo
            * `SA` - Salerno
            * `SS` - Sassari
            * `SV` - Savona
            * `SI` - Siena
            * `SR` - Siracusa
            * `SO` - Sondrio
            * `SU` - Sud Sardegna
            * `TA` - Taranto
            * `TE` - Teramo
            * `TR` - Terni
            * `TO` - Torino
            * `TP` - Trapani
            * `TN` - Trento
            * `TV` - Treviso
            * `TS` - Trieste
            * `UD` - Udine
            * `VA` - Varese
            * `VE` - Venezia
            * `VB` - Verbano Cusio Ossola
            * `VC` - Vercelli
            * `VR` - Verona
            * `VV` - Vibo Valentia
            * `VI` - Vicenza
            * `VT` - Viterbo
          title: Areale
        soil_granularity:
          allOf:
          - $ref: '#/components/schemas/SoilGranularityEnum'
          description: |-
            * `coarse` - coarse
            * `medium` - medium
            * `medium_fine` - medium-fine
            * `fine` - fine
            * `very_fine` - very fine
          title: Suolo
        organic_content_level:
          allOf:
          - $ref: '#/components/schemas/OrganicContentLevelEnum'
          description: |-
            * `low` - low
            * `medium` - medium
            * `high` - high
          title: Contenuto SO
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: Creato il
        last_modified:
          type: string
          format: date-time
          readOnly: true
        farm:
          type: integer
          title: Azienda
        baseline:
          type: integer
          nullable: true
      required:
      - created_at
      - farm
      - last_modified
    LandplotsBaselineCreateError:
      oneOf:
      - $ref: '#/components/schemas/LandplotsBaselineCreateNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/LandplotsBaselineCreateNameErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/LandplotsBaselineCreateNonFieldErrorsErrorComponent'
          name: '#/components/schemas/LandplotsBaselineCreateNameErrorComponent'
    LandplotsBaselineCreateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/LandplotsBaselineCreateValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/LandplotsBaselineCreateValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    LandplotsBaselineCreateNameErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - name
          type: string
          description: '* `name` - name'
        code:
          enum:
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    LandplotsBaselineCreateNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    LandplotsBaselineCreateValidationError:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ValidationErrorEnum'
          description: '* `validation_error` - Validation Error'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LandplotsBaselineCreateError'
      required:
      - errors
      - type
    LandplotsBaselineRetrieveErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    LandplotsCreateArealErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - areal
          type: string
          description: '* `areal` - areal'
        code:
          enum:
          - invalid_choice
          - 'null'
          type: string
          description: |-
            * `invalid_choice` - invalid_choice
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    LandplotsCreateBaselineErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - baseline
          type: string
          description: '* `baseline` - baseline'
        code:
          enum:
          - does_not_exist
          - incorrect_type
          type: string
          description: |-
            * `does_not_exist` - does_not_exist
            * `incorrect_type` - incorrect_type
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    LandplotsCreateError:
      oneOf:
      - $ref: '#/components/schemas/LandplotsCreateNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/LandplotsCreateNameErrorComponent'
      - $ref: '#/components/schemas/LandplotsCreateLandAreaErrorComponent'
      - $ref: '#/components/schemas/LandplotsCreateArealErrorComponent'
      - $ref: '#/components/schemas/LandplotsCreateSoilGranularityErrorComponent'
      - $ref: '#/components/schemas/LandplotsCreateOrganicContentLevelErrorComponent'
      - $ref: '#/components/schemas/LandplotsCreateFarmErrorComponent'
      - $ref: '#/components/schemas/LandplotsCreateBaselineErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/LandplotsCreateNonFieldErrorsErrorComponent'
          name: '#/components/schemas/LandplotsCreateNameErrorComponent'
          land_area: '#/components/schemas/LandplotsCreateLandAreaErrorComponent'
          areal: '#/components/schemas/LandplotsCreateArealErrorComponent'
          soil_granularity: '#/components/schemas/LandplotsCreateSoilGranularityErrorComponent'
          organic_content_level: '#/components/schemas/LandplotsCreateOrganicContentLevelErrorComponent'
          farm: '#/components/schemas/LandplotsCreateFarmErrorComponent'
          baseline: '#/components/schemas/LandplotsCreateBaselineErrorComponent'
    LandplotsCreateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/LandplotsCreateValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/LandplotsCreateValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    LandplotsCreateFarmErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - farm
          type: string
          description: '* `farm` - farm'
        code:
          enum:
          - does_not_exist
          - incorrect_type
          - 'null'
          - required
          type: string
          description: |-
            * `does_not_exist` - does_not_exist
            * `incorrect_type` - incorrect_type
            * `null` - null
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    LandplotsCreateLandAreaErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - land_area
          type: string
          description: '* `land_area` - land_area'
        code:
          enum:
          - invalid
          - max_string_length
          type: string
          description: |-
            * `invalid` - invalid
            * `max_string_length` - max_string_length
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    LandplotsCreateNameErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - name
          type: string
          description: '* `name` - name'
        code:
          enum:
          - invalid
          - max_length
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `invalid` - invalid
            * `max_length` - max_length
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    LandplotsCreateNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    LandplotsCreateOrganicContentLevelErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - organic_content_level
          type: string
          description: '* `organic_content_level` - organic_content_level'
        code:
          enum:
          - invalid_choice
          - 'null'
          type: string
          description: |-
            * `invalid_choice` - invalid_choice
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    LandplotsCreateSoilGranularityErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - soil_granularity
          type: string
          description: '* `soil_granularity` - soil_granularity'
        code:
          enum:
          - invalid_choice
          - 'null'
          type: string
          description: |-
            * `invalid_choice` - invalid_choice
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    LandplotsCreateValidationError:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ValidationErrorEnum'
          description: '* `validation_error` - Validation Error'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LandplotsCreateError'
      required:
      - errors
      - type
    LandplotsDestroyErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    LandplotsListErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    LandplotsPartialUpdateArealErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - areal
          type: string
          description: '* `areal` - areal'
        code:
          enum:
          - invalid_choice
          - 'null'
          type: string
          description: |-
            * `invalid_choice` - invalid_choice
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    LandplotsPartialUpdateBaselineErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - baseline
          type: string
          description: '* `baseline` - baseline'
        code:
          enum:
          - does_not_exist
          - incorrect_type
          type: string
          description: |-
            * `does_not_exist` - does_not_exist
            * `incorrect_type` - incorrect_type
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    LandplotsPartialUpdateError:
      oneOf:
      - $ref: '#/components/schemas/LandplotsPartialUpdateNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/LandplotsPartialUpdateNameErrorComponent'
      - $ref: '#/components/schemas/LandplotsPartialUpdateLandAreaErrorComponent'
      - $ref: '#/components/schemas/LandplotsPartialUpdateArealErrorComponent'
      - $ref: '#/components/schemas/LandplotsPartialUpdateSoilGranularityErrorComponent'
      - $ref: '#/components/schemas/LandplotsPartialUpdateOrganicContentLevelErrorComponent'
      - $ref: '#/components/schemas/LandplotsPartialUpdateFarmErrorComponent'
      - $ref: '#/components/schemas/LandplotsPartialUpdateBaselineErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/LandplotsPartialUpdateNonFieldErrorsErrorComponent'
          name: '#/components/schemas/LandplotsPartialUpdateNameErrorComponent'
          land_area: '#/components/schemas/LandplotsPartialUpdateLandAreaErrorComponent'
          areal: '#/components/schemas/LandplotsPartialUpdateArealErrorComponent'
          soil_granularity: '#/components/schemas/LandplotsPartialUpdateSoilGranularityErrorComponent'
          organic_content_level: '#/components/schemas/LandplotsPartialUpdateOrganicContentLevelErrorComponent'
          farm: '#/components/schemas/LandplotsPartialUpdateFarmErrorComponent'
          baseline: '#/components/schemas/LandplotsPartialUpdateBaselineErrorComponent'
    LandplotsPartialUpdateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/LandplotsPartialUpdateValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/LandplotsPartialUpdateValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    LandplotsPartialUpdateFarmErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - farm
          type: string
          description: '* `farm` - farm'
        code:
          enum:
          - does_not_exist
          - incorrect_type
          - 'null'
          - required
          type: string
          description: |-
            * `does_not_exist` - does_not_exist
            * `incorrect_type` - incorrect_type
            * `null` - null
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    LandplotsPartialUpdateLandAreaErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - land_area
          type: string
          description: '* `land_area` - land_area'
        code:
          enum:
          - invalid
          - max_string_length
          type: string
          description: |-
            * `invalid` - invalid
            * `max_string_length` - max_string_length
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    LandplotsPartialUpdateNameErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - name
          type: string
          description: '* `name` - name'
        code:
          enum:
          - invalid
          - max_length
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `invalid` - invalid
            * `max_length` - max_length
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    LandplotsPartialUpdateNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    LandplotsPartialUpdateOrganicContentLevelErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - organic_content_level
          type: string
          description: '* `organic_content_level` - organic_content_level'
        code:
          enum:
          - invalid_choice
          - 'null'
          type: string
          description: |-
            * `invalid_choice` - invalid_choice
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    LandplotsPartialUpdateSoilGranularityErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - soil_granularity
          type: string
          description: '* `soil_granularity` - soil_granularity'
        code:
          enum:
          - invalid_choice
          - 'null'
          type: string
          description: |-
            * `invalid_choice` - invalid_choice
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    LandplotsPartialUpdateValidationError:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ValidationErrorEnum'
          description: '* `validation_error` - Validation Error'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LandplotsPartialUpdateError'
      required:
      - errors
      - type
    LandplotsRetrieveErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    LandplotsUpdateArealErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - areal
          type: string
          description: '* `areal` - areal'
        code:
          enum:
          - invalid_choice
          - 'null'
          type: string
          description: |-
            * `invalid_choice` - invalid_choice
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    LandplotsUpdateBaselineErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - baseline
          type: string
          description: '* `baseline` - baseline'
        code:
          enum:
          - does_not_exist
          - incorrect_type
          type: string
          description: |-
            * `does_not_exist` - does_not_exist
            * `incorrect_type` - incorrect_type
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    LandplotsUpdateError:
      oneOf:
      - $ref: '#/components/schemas/LandplotsUpdateNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/LandplotsUpdateNameErrorComponent'
      - $ref: '#/components/schemas/LandplotsUpdateLandAreaErrorComponent'
      - $ref: '#/components/schemas/LandplotsUpdateArealErrorComponent'
      - $ref: '#/components/schemas/LandplotsUpdateSoilGranularityErrorComponent'
      - $ref: '#/components/schemas/LandplotsUpdateOrganicContentLevelErrorComponent'
      - $ref: '#/components/schemas/LandplotsUpdateFarmErrorComponent'
      - $ref: '#/components/schemas/LandplotsUpdateBaselineErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/LandplotsUpdateNonFieldErrorsErrorComponent'
          name: '#/components/schemas/LandplotsUpdateNameErrorComponent'
          land_area: '#/components/schemas/LandplotsUpdateLandAreaErrorComponent'
          areal: '#/components/schemas/LandplotsUpdateArealErrorComponent'
          soil_granularity: '#/components/schemas/LandplotsUpdateSoilGranularityErrorComponent'
          organic_content_level: '#/components/schemas/LandplotsUpdateOrganicContentLevelErrorComponent'
          farm: '#/components/schemas/LandplotsUpdateFarmErrorComponent'
          baseline: '#/components/schemas/LandplotsUpdateBaselineErrorComponent'
    LandplotsUpdateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/LandplotsUpdateValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/LandplotsUpdateValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    LandplotsUpdateFarmErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - farm
          type: string
          description: '* `farm` - farm'
        code:
          enum:
          - does_not_exist
          - incorrect_type
          - 'null'
          - required
          type: string
          description: |-
            * `does_not_exist` - does_not_exist
            * `incorrect_type` - incorrect_type
            * `null` - null
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    LandplotsUpdateLandAreaErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - land_area
          type: string
          description: '* `land_area` - land_area'
        code:
          enum:
          - invalid
          - max_string_length
          type: string
          description: |-
            * `invalid` - invalid
            * `max_string_length` - max_string_length
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    LandplotsUpdateNameErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - name
          type: string
          description: '* `name` - name'
        code:
          enum:
          - invalid
          - max_length
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `invalid` - invalid
            * `max_length` - max_length
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    LandplotsUpdateNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    LandplotsUpdateOrganicContentLevelErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - organic_content_level
          type: string
          description: '* `organic_content_level` - organic_content_level'
        code:
          enum:
          - invalid_choice
          - 'null'
          type: string
          description: |-
            * `invalid_choice` - invalid_choice
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    LandplotsUpdateSoilGranularityErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - soil_granularity
          type: string
          description: '* `soil_granularity` - soil_granularity'
        code:
          enum:
          - invalid_choice
          - 'null'
          type: string
          description: |-
            * `invalid_choice` - invalid_choice
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    LandplotsUpdateValidationError:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ValidationErrorEnum'
          description: '* `validation_error` - Validation Error'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LandplotsUpdateError'
      required:
      - errors
      - type
    Location:
      type: object
      properties:
        code:
          type: string
          maxLength: 10
        label:
          type: string
          maxLength: 255
      required:
      - code
      - label
    Nested:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          nullable: true
          title: Nome
          maxLength: 255
        land_area:
          type: number
          format: double
          nullable: true
          title: Area terreno
        areal:
          allOf:
          - $ref: '#/components/schemas/ArealEnum'
          description: |-
            * `north` - nord
            * `center` - centro
            * `south` - sud
            * `AG` - Agrigento
            * `AL` - Alessandria
            * `AN` - Ancona
            * `AO` - Aosta
            * `AR` - Arezzo
            * `AP` - Ascoli Piceno
            * `AT` - Asti
            * `AV` - Avellino
            * `BA` - Bari
            * `BT` - Barletta-Andria-Trani
            * `BL` - Belluno
            * `BN` - Benevento
            * `BG` - Bergamo
            * `BI` - Biella
            * `BO` - Bologna
            * `BZ` - Bolzano/Bozen
            * `BS` - Brescia
            * `BR` - Brindisi
            * `CA` - Cagliari
            * `CL` - Caltanissetta
            * `CB` - Campobasso
            * `CE` - Caserta
            * `CT` - Catania
            * `CZ` - Catanzaro
            * `CH` - Chieti
            * `CO` - Como
            * `CS` - Cosenza
            * `CR` - Cremona
            * `KR` - Crotone
            * `CN` - Cuneo
            * `EN` - Enna
            * `FM` - Fermo
            * `FE` - Ferrara
            * `FI` - Firenze
            * `FG` - Foggia
            * `FC` - Forlì-Cesena
            * `FR` - Frosinone
            * `GE` - Genova
            * `GO` - Gorizia
            * `GR` - Grosseto
            * `IM` - Imperia
            * `IS` - Isernia
            * `SP` - La Spezia
            * `AQ` - L’Aquila
            * `LT` - Latina
            * `LE` - Lecce
            * `LC` - Lecco
            * `LI` - Livorno
            * `LO` - Lodi
            * `LU` - Lucca
            * `MC` - Macerata
            * `MN` - Mantova
            * `MS` - Massa-Carrara
            * `MT` - Matera
            * `ME` - Messina
            * `MI` - Milano
            * `MO` - Modena
            * `MB` - Monza e Brianza
            * `NA` - Napoli
            * `NO` - Novara
            * `NU` - Nuoro
            * `OR` - Oristano
            * `PD` - Padova
            * `PA` - Palermo
            * `PR` - Parma
            * `PV` - Pavia
            * `PG` - Perugia
            * `PU` - Pesaro e Urbino
            * `PE` - Pescara
            * `PC` - Piacenza
            * `PI` - Pisa
            * `PT` - Pistoia
            * `PN` - Pordenone
            * `PZ` - Potenza
            * `PO` - Prato
            * `RG` - Ragusa
            * `RA` - Ravenna
            * `RC` - Reggio Calabria
            * `RE` - Reggio Emilia
            * `RI` - Rieti
            * `RN` - Rimini
            * `RM` - Roma
            * `RO` - Rovigo
            * `SA` - Salerno
            * `SS` - Sassari
            * `SV` - Savona
            * `SI` - Siena
            * `SR` - Siracusa
            * `SO` - Sondrio
            * `SU` - Sud Sardegna
            * `TA` - Taranto
            * `TE` - Teramo
            * `TR` - Terni
            * `TO` - Torino
            * `TP` - Trapani
            * `TN` - Trento
            * `TV` - Treviso
            * `TS` - Trieste
            * `UD` - Udine
            * `VA` - Varese
            * `VE` - Venezia
            * `VB` - Verbano Cusio Ossola
            * `VC` - Vercelli
            * `VR` - Verona
            * `VV` - Vibo Valentia
            * `VI` - Vicenza
            * `VT` - Viterbo
          title: Areale
        soil_granularity:
          allOf:
          - $ref: '#/components/schemas/SoilGranularityEnum'
          description: |-
            * `coarse` - coarse
            * `medium` - medium
            * `medium_fine` - medium-fine
            * `fine` - fine
            * `very_fine` - very fine
          title: Suolo
        organic_content_level:
          allOf:
          - $ref: '#/components/schemas/OrganicContentLevelEnum'
          description: |-
            * `low` - low
            * `medium` - medium
            * `high` - high
          title: Contenuto SO
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: Creato il
        last_modified:
          type: string
          format: date-time
          readOnly: true
        farm:
          type: integer
          title: Azienda
        baseline:
          type: integer
          nullable: true
      required:
      - created_at
      - farm
      - id
      - last_modified
    NullEnum:
      enum:
      - null
    OrganicContentLevelEnum:
      enum:
      - low
      - medium
      - high
      type: string
    OrganicContentLevelsListErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    OrganicFertilizer:
      type: object
      properties:
        fertilizer:
          allOf:
          - $ref: '#/components/schemas/FertilizerEnum'
          description: |-
            * `sewage` - liquame
            * `compost` - compost
            * `digestate` - digestato
            * `mineral` - minerale
          title: Fertilizzante
        carbon:
          type: number
          format: double
          title: Carbonio
          description: C
        azote:
          type: number
          format: double
          title: Azoto
          description: N
        iso_index:
          type: number
          format: double
          title: Isoumico
          description: Iso
      required:
      - azote
      - carbon
      - fertilizer
      - iso_index
    OrganicFertilizersListErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    OrganicFertilizersRetrieveErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    ParseError:
      type: object
      properties:
        code:
          allOf:
          - $ref: '#/components/schemas/ParseErrorCodeEnum'
          description: '* `parse_error` - Parse Error'
        detail:
          type: string
        attr:
          type: string
          nullable: true
      required:
      - attr
      - code
      - detail
    ParseErrorCodeEnum:
      enum:
      - parse_error
      type: string
    ParseErrorResponse:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ClientErrorEnum'
          description: '* `client_error` - Client Error'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ParseError'
      required:
      - errors
      - type
    PatchedCulture:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        order:
          type: integer
          readOnly: true
        crop:
          allOf:
          - $ref: '#/components/schemas/CropEnum'
          description: |-
            * `grain_corn` - granella di mais
            * `silage_corn` - mais insilato
            * `wheat` - frumento
            * `soy` - soia
            * `alfalfa` - erba medica
            * `meadow` - prato
            * `orchard` - frutteto
            * `vineyard` - vigneto
            * `grassy_orchard` - frutteto inerbito
            * `grassy_vineyard` - vigneto inerbito
          title: Coltura
        duration:
          type: integer
          maximum: 20
          minimum: 0
          title: Durata
        residues:
          type: boolean
          title: Residui lasciati
        land_management:
          allOf:
          - $ref: '#/components/schemas/LandManagementEnum'
          description: |-
            * `conventional` - convenzionale
            * `reduced` - ridotta
            * `direct_sowing` - semina su sodo
            * `organic` - biologica
          title: Gestione del terreno
        fertilizer:
          description: |-
            * `sewage` - liquame
            * `compost` - compost
            * `digestate` - digestato
            * `mineral` - minerale
          nullable: true
          title: Fertilizzante
          oneOf:
          - $ref: '#/components/schemas/FertilizerEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        added_minerals:
          type: boolean
          title: Minerali aggiunti
        fertilization_level:
          allOf:
          - $ref: '#/components/schemas/FertilizationLevelEnum'
          description: |-
            * `low` - low
            * `high` - high
          title: Livello di fertilizzazione
        cover:
          type: boolean
          title: Applicazione cover
        system:
          type: integer
          title: Sistema colturale
    PatchedFarm:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Nome
          maxLength: 255
        vat_number:
          type: string
          nullable: true
          maxLength: 16
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: Creato il
        last_modified:
          type: string
          format: date-time
          readOnly: true
    PatchedLandPlot:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          nullable: true
          title: Nome
          maxLength: 255
        land_area:
          type: number
          format: double
          nullable: true
          title: Area terreno
        areal:
          allOf:
          - $ref: '#/components/schemas/ArealEnum'
          description: |-
            * `north` - nord
            * `center` - centro
            * `south` - sud
            * `AG` - Agrigento
            * `AL` - Alessandria
            * `AN` - Ancona
            * `AO` - Aosta
            * `AR` - Arezzo
            * `AP` - Ascoli Piceno
            * `AT` - Asti
            * `AV` - Avellino
            * `BA` - Bari
            * `BT` - Barletta-Andria-Trani
            * `BL` - Belluno
            * `BN` - Benevento
            * `BG` - Bergamo
            * `BI` - Biella
            * `BO` - Bologna
            * `BZ` - Bolzano/Bozen
            * `BS` - Brescia
            * `BR` - Brindisi
            * `CA` - Cagliari
            * `CL` - Caltanissetta
            * `CB` - Campobasso
            * `CE` - Caserta
            * `CT` - Catania
            * `CZ` - Catanzaro
            * `CH` - Chieti
            * `CO` - Como
            * `CS` - Cosenza
            * `CR` - Cremona
            * `KR` - Crotone
            * `CN` - Cuneo
            * `EN` - Enna
            * `FM` - Fermo
            * `FE` - Ferrara
            * `FI` - Firenze
            * `FG` - Foggia
            * `FC` - Forlì-Cesena
            * `FR` - Frosinone
            * `GE` - Genova
            * `GO` - Gorizia
            * `GR` - Grosseto
            * `IM` - Imperia
            * `IS` - Isernia
            * `SP` - La Spezia
            * `AQ` - L’Aquila
            * `LT` - Latina
            * `LE` - Lecce
            * `LC` - Lecco
            * `LI` - Livorno
            * `LO` - Lodi
            * `LU` - Lucca
            * `MC` - Macerata
            * `MN` - Mantova
            * `MS` - Massa-Carrara
            * `MT` - Matera
            * `ME` - Messina
            * `MI` - Milano
            * `MO` - Modena
            * `MB` - Monza e Brianza
            * `NA` - Napoli
            * `NO` - Novara
            * `NU` - Nuoro
            * `OR` - Oristano
            * `PD` - Padova
            * `PA` - Palermo
            * `PR` - Parma
            * `PV` - Pavia
            * `PG` - Perugia
            * `PU` - Pesaro e Urbino
            * `PE` - Pescara
            * `PC` - Piacenza
            * `PI` - Pisa
            * `PT` - Pistoia
            * `PN` - Pordenone
            * `PZ` - Potenza
            * `PO` - Prato
            * `RG` - Ragusa
            * `RA` - Ravenna
            * `RC` - Reggio Calabria
            * `RE` - Reggio Emilia
            * `RI` - Rieti
            * `RN` - Rimini
            * `RM` - Roma
            * `RO` - Rovigo
            * `SA` - Salerno
            * `SS` - Sassari
            * `SV` - Savona
            * `SI` - Siena
            * `SR` - Siracusa
            * `SO` - Sondrio
            * `SU` - Sud Sardegna
            * `TA` - Taranto
            * `TE` - Teramo
            * `TR` - Terni
            * `TO` - Torino
            * `TP` - Trapani
            * `TN` - Trento
            * `TV` - Treviso
            * `TS` - Trieste
            * `UD` - Udine
            * `VA` - Varese
            * `VE` - Venezia
            * `VB` - Verbano Cusio Ossola
            * `VC` - Vercelli
            * `VR` - Verona
            * `VV` - Vibo Valentia
            * `VI` - Vicenza
            * `VT` - Viterbo
          title: Areale
        soil_granularity:
          allOf:
          - $ref: '#/components/schemas/SoilGranularityEnum'
          description: |-
            * `coarse` - coarse
            * `medium` - medium
            * `medium_fine` - medium-fine
            * `fine` - fine
            * `very_fine` - very fine
          title: Suolo
        organic_content_level:
          allOf:
          - $ref: '#/components/schemas/OrganicContentLevelEnum'
          description: |-
            * `low` - low
            * `medium` - medium
            * `high` - high
          title: Contenuto SO
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: Creato il
        last_modified:
          type: string
          format: date-time
          readOnly: true
        farm:
          type: integer
          title: Azienda
        baseline:
          type: integer
          nullable: true
    PatchedRun:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        spoiled:
          type: boolean
          title: Modificato
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: Creato il
        last_modified:
          type: string
          format: date-time
          readOnly: true
        land_plot:
          type: integer
          title: Appezzamento
        system:
          type: integer
          title: Sistema colturale
    PatchedSystem:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        farm:
          type: integer
          title: Azienda
        name:
          type: string
          title: Nome
          maxLength: 255
        baseline:
          type: boolean
        duration:
          type: integer
          description: Retrieve the duration as the sum of each system's culture duration.
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: Creato il
        last_modified:
          type: string
          format: date-time
          readOnly: true
    ProcessingEnum:
      enum:
      - plowing
      - arrowing
      - sowing
      - direct_sowing
      - weeding
      - treshing
      - corn_treshing
      - waste_water
      - straw_shredding
      - stalk_chopping
      - straw_packing
      - stalk_packing
      - irrigation
      - drying
      - mineral_fertilization
      - organic_fertilization
      - silage_collection
      - haying
      - trimming
      - vine_shoot
      - vine_treatments
      - grassing
      - grape_harvesting
      - tree_treatments
      - cover_sowing
      type: string
    Run:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        spoiled:
          type: boolean
          title: Modificato
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: Creato il
        last_modified:
          type: string
          format: date-time
          readOnly: true
        land_plot:
          type: integer
          title: Appezzamento
        system:
          type: integer
          title: Sistema colturale
      required:
      - created_at
      - id
      - land_plot
      - last_modified
      - system
    RunExport:
      type: object
      properties:
        recipient:
          type: string
          format: email
          readOnly: true
        farm:
          allOf:
          - $ref: '#/components/schemas/Farm'
          readOnly: true
        landplot:
          allOf:
          - $ref: '#/components/schemas/LandPlot'
          readOnly: true
        baseline:
          allOf:
          - $ref: '#/components/schemas/SystemWihCultures'
          readOnly: true
        alternative:
          allOf:
          - $ref: '#/components/schemas/SystemWihCultures'
          readOnly: true
        output:
          allOf:
          - $ref: '#/components/schemas/RunOutput'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        last_modified:
          type: string
          format: date-time
          readOnly: true
      required:
      - alternative
      - baseline
      - created_at
      - farm
      - landplot
      - last_modified
      - output
      - recipient
    RunIn:
      type: object
      properties:
        spoiled:
          type: boolean
          title: Modificato
        output:
          type: object
          additionalProperties: {}
          nullable: true
          title: Risultato
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: Creato il
        last_modified:
          type: string
          format: date-time
          readOnly: true
        land_plot:
          type: integer
          title: Appezzamento
        system:
          type: integer
          title: Sistema colturale
      required:
      - created_at
      - land_plot
      - last_modified
      - system
    RunOutput:
      type: object
      properties:
        baseline_cultures_detail:
          type: array
          items:
            $ref: '#/components/schemas/CultureData'
        baseline_system_detail:
          $ref: '#/components/schemas/SystemData'
        alternative_cultures_detail:
          type: array
          items:
            $ref: '#/components/schemas/CultureData'
        alternative_system_detail:
          $ref: '#/components/schemas/SystemData'
        carbon_credits_delta_per_hectare:
          type: number
          format: double
          default: 0.0
        carbon_credits_delta:
          type: number
          format: double
          default: 0.0
      required:
      - alternative_cultures_detail
      - alternative_system_detail
      - baseline_cultures_detail
      - baseline_system_detail
    RunSerializerExpanded:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        spoiled:
          type: boolean
          title: Modificato
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: Creato il
        last_modified:
          type: string
          format: date-time
          readOnly: true
        land_plot:
          allOf:
          - $ref: '#/components/schemas/Nested'
          readOnly: true
        system:
          allOf:
          - $ref: '#/components/schemas/Nested'
          readOnly: true
      required:
      - created_at
      - id
      - land_plot
      - last_modified
      - system
    RunsCreateError:
      oneOf:
      - $ref: '#/components/schemas/RunsCreateNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/RunsCreateSpoiledErrorComponent'
      - $ref: '#/components/schemas/RunsCreateOutputErrorComponent'
      - $ref: '#/components/schemas/RunsCreateLandPlotErrorComponent'
      - $ref: '#/components/schemas/RunsCreateSystemErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/RunsCreateNonFieldErrorsErrorComponent'
          spoiled: '#/components/schemas/RunsCreateSpoiledErrorComponent'
          output: '#/components/schemas/RunsCreateOutputErrorComponent'
          land_plot: '#/components/schemas/RunsCreateLandPlotErrorComponent'
          system: '#/components/schemas/RunsCreateSystemErrorComponent'
    RunsCreateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/RunsCreateValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/RunsCreateValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    RunsCreateLandPlotErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - land_plot
          type: string
          description: '* `land_plot` - land_plot'
        code:
          enum:
          - does_not_exist
          - incorrect_type
          - 'null'
          - required
          type: string
          description: |-
            * `does_not_exist` - does_not_exist
            * `incorrect_type` - incorrect_type
            * `null` - null
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RunsCreateNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          - unique
          type: string
          description: |-
            * `invalid` - invalid
            * `unique` - unique
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RunsCreateOutputErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - output
          type: string
          description: '* `output` - output'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RunsCreateSpoiledErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - spoiled
          type: string
          description: '* `spoiled` - spoiled'
        code:
          enum:
          - invalid
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RunsCreateSystemErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - system
          type: string
          description: '* `system` - system'
        code:
          enum:
          - does_not_exist
          - incorrect_type
          - 'null'
          - required
          type: string
          description: |-
            * `does_not_exist` - does_not_exist
            * `incorrect_type` - incorrect_type
            * `null` - null
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RunsCreateValidationError:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ValidationErrorEnum'
          description: '* `validation_error` - Validation Error'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/RunsCreateError'
      required:
      - errors
      - type
    RunsDestroyErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    RunsExportError:
      oneOf:
      - $ref: '#/components/schemas/RunsExportNonFieldErrorsErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/RunsExportNonFieldErrorsErrorComponent'
    RunsExportErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/RunsExportValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/RunsExportValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    RunsExportNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RunsExportValidationError:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ValidationErrorEnum'
          description: '* `validation_error` - Validation Error'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/RunsExportError'
      required:
      - errors
      - type
    RunsLaunchError:
      oneOf:
      - $ref: '#/components/schemas/RunsLaunchNonFieldErrorsErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/RunsLaunchNonFieldErrorsErrorComponent'
    RunsLaunchErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/RunsLaunchValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/RunsLaunchValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    RunsLaunchNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RunsLaunchValidationError:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ValidationErrorEnum'
          description: '* `validation_error` - Validation Error'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/RunsLaunchError'
      required:
      - errors
      - type
    RunsListErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    RunsPartialUpdateError:
      oneOf:
      - $ref: '#/components/schemas/RunsPartialUpdateNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/RunsPartialUpdateSpoiledErrorComponent'
      - $ref: '#/components/schemas/RunsPartialUpdateLandPlotErrorComponent'
      - $ref: '#/components/schemas/RunsPartialUpdateSystemErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/RunsPartialUpdateNonFieldErrorsErrorComponent'
          spoiled: '#/components/schemas/RunsPartialUpdateSpoiledErrorComponent'
          land_plot: '#/components/schemas/RunsPartialUpdateLandPlotErrorComponent'
          system: '#/components/schemas/RunsPartialUpdateSystemErrorComponent'
    RunsPartialUpdateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/RunsPartialUpdateValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/RunsPartialUpdateValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    RunsPartialUpdateLandPlotErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - land_plot
          type: string
          description: '* `land_plot` - land_plot'
        code:
          enum:
          - does_not_exist
          - incorrect_type
          - 'null'
          - required
          type: string
          description: |-
            * `does_not_exist` - does_not_exist
            * `incorrect_type` - incorrect_type
            * `null` - null
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RunsPartialUpdateNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          - unique
          type: string
          description: |-
            * `invalid` - invalid
            * `unique` - unique
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RunsPartialUpdateSpoiledErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - spoiled
          type: string
          description: '* `spoiled` - spoiled'
        code:
          enum:
          - invalid
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RunsPartialUpdateSystemErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - system
          type: string
          description: '* `system` - system'
        code:
          enum:
          - does_not_exist
          - incorrect_type
          - 'null'
          - required
          type: string
          description: |-
            * `does_not_exist` - does_not_exist
            * `incorrect_type` - incorrect_type
            * `null` - null
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RunsPartialUpdateValidationError:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ValidationErrorEnum'
          description: '* `validation_error` - Validation Error'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/RunsPartialUpdateError'
      required:
      - errors
      - type
    RunsRetrieveErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    RunsUpdateError:
      oneOf:
      - $ref: '#/components/schemas/RunsUpdateNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/RunsUpdateSpoiledErrorComponent'
      - $ref: '#/components/schemas/RunsUpdateLandPlotErrorComponent'
      - $ref: '#/components/schemas/RunsUpdateSystemErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/RunsUpdateNonFieldErrorsErrorComponent'
          spoiled: '#/components/schemas/RunsUpdateSpoiledErrorComponent'
          land_plot: '#/components/schemas/RunsUpdateLandPlotErrorComponent'
          system: '#/components/schemas/RunsUpdateSystemErrorComponent'
    RunsUpdateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/RunsUpdateValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/RunsUpdateValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    RunsUpdateLandPlotErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - land_plot
          type: string
          description: '* `land_plot` - land_plot'
        code:
          enum:
          - does_not_exist
          - incorrect_type
          - 'null'
          - required
          type: string
          description: |-
            * `does_not_exist` - does_not_exist
            * `incorrect_type` - incorrect_type
            * `null` - null
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RunsUpdateNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          - unique
          type: string
          description: |-
            * `invalid` - invalid
            * `unique` - unique
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RunsUpdateSpoiledErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - spoiled
          type: string
          description: '* `spoiled` - spoiled'
        code:
          enum:
          - invalid
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RunsUpdateSystemErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - system
          type: string
          description: '* `system` - system'
        code:
          enum:
          - does_not_exist
          - incorrect_type
          - 'null'
          - required
          type: string
          description: |-
            * `does_not_exist` - does_not_exist
            * `incorrect_type` - incorrect_type
            * `null` - null
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    RunsUpdateValidationError:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ValidationErrorEnum'
          description: '* `validation_error` - Validation Error'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/RunsUpdateError'
      required:
      - errors
      - type
    ServerErrorEnum:
      enum:
      - server_error
      type: string
    SoilGranularitiesListErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    SoilGranularityEnum:
      enum:
      - coarse
      - medium
      - medium_fine
      - fine
      - very_fine
      type: string
    SoilOrganicComposition:
      type: object
      properties:
        granularity:
          allOf:
          - $ref: '#/components/schemas/GranularityEnum'
          description: |-
            * `coarse` - coarse
            * `medium` - medium
            * `medium_fine` - medium-fine
            * `fine` - fine
            * `very_fine` - very fine
          title: Suolo
        low:
          type: number
          format: double
        medium:
          type: number
          format: double
        high:
          type: number
          format: double
        notes:
          type: string
          nullable: true
          title: Note
      required:
      - granularity
      - high
      - low
      - medium
    SoilOrganicCompositionsListErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    SoilOrganicCompositionsRetrieveErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    System:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        farm:
          type: integer
          title: Azienda
        name:
          type: string
          title: Nome
          maxLength: 255
        baseline:
          type: boolean
        duration:
          type: integer
          description: Retrieve the duration as the sum of each system's culture duration.
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: Creato il
        last_modified:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - duration
      - farm
      - id
      - last_modified
    SystemCultureIn:
      type: object
      properties:
        order:
          type: integer
          readOnly: true
        crop:
          allOf:
          - $ref: '#/components/schemas/CropEnum'
          description: |-
            * `grain_corn` - granella di mais
            * `silage_corn` - mais insilato
            * `wheat` - frumento
            * `soy` - soia
            * `alfalfa` - erba medica
            * `meadow` - prato
            * `orchard` - frutteto
            * `vineyard` - vigneto
            * `grassy_orchard` - frutteto inerbito
            * `grassy_vineyard` - vigneto inerbito
          title: Coltura
        duration:
          type: integer
          maximum: 20
          minimum: 0
          title: Durata
        residues:
          type: boolean
          title: Residui lasciati
        land_management:
          allOf:
          - $ref: '#/components/schemas/LandManagementEnum'
          description: |-
            * `conventional` - convenzionale
            * `reduced` - ridotta
            * `direct_sowing` - semina su sodo
            * `organic` - biologica
          title: Gestione del terreno
        fertilizer:
          description: |-
            * `sewage` - liquame
            * `compost` - compost
            * `digestate` - digestato
            * `mineral` - minerale
          nullable: true
          title: Fertilizzante
          oneOf:
          - $ref: '#/components/schemas/FertilizerEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        added_minerals:
          type: boolean
          title: Minerali aggiunti
        fertilization_level:
          allOf:
          - $ref: '#/components/schemas/FertilizationLevelEnum'
          description: |-
            * `low` - low
            * `high` - high
          title: Livello di fertilizzazione
        cover:
          type: boolean
          title: Applicazione cover
      required:
      - crop
      - order
    SystemData:
      type: object
      properties:
        soil_balance_carbon:
          type: number
          format: double
          default: 0.0
        soil_balance_carbon_dioxide:
          type: number
          format: double
          default: 0.0
        carbon_change:
          type: number
          format: double
          default: 0.0
        fuel_consumption_carbon:
          type: number
          format: double
          default: 0.0
        fuel_consumption_carbon_dioxide:
          type: number
          format: double
          default: 0.0
        carbon_credits_per_hectare:
          type: number
          format: double
          default: 0.0
        carbon_credits:
          type: number
          format: double
          default: 0.0
    SystemIn:
      type: object
      properties:
        farm:
          type: integer
          title: Azienda
        name:
          type: string
          title: Nome
          maxLength: 255
        baseline:
          type: boolean
        duration:
          type: integer
          description: Retrieve the duration as the sum of each system's culture duration.
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: Creato il
        last_modified:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - duration
      - farm
      - last_modified
    SystemWihCultures:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        farm:
          type: integer
          readOnly: true
        name:
          type: string
          title: Nome
          maxLength: 255
        baseline:
          type: boolean
        duration:
          type: integer
          description: Retrieve the duration as the sum of each system's culture duration.
          readOnly: true
        cultures:
          type: array
          items:
            $ref: '#/components/schemas/Culture'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: Creato il
        last_modified:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - cultures
      - duration
      - farm
      - id
      - last_modified
    SystemsCreateBaselineErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - baseline
          type: string
          description: '* `baseline` - baseline'
        code:
          enum:
          - invalid
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    SystemsCreateError:
      oneOf:
      - $ref: '#/components/schemas/SystemsCreateNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/SystemsCreateFarmErrorComponent'
      - $ref: '#/components/schemas/SystemsCreateNameErrorComponent'
      - $ref: '#/components/schemas/SystemsCreateBaselineErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/SystemsCreateNonFieldErrorsErrorComponent'
          farm: '#/components/schemas/SystemsCreateFarmErrorComponent'
          name: '#/components/schemas/SystemsCreateNameErrorComponent'
          baseline: '#/components/schemas/SystemsCreateBaselineErrorComponent'
    SystemsCreateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/SystemsCreateValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/SystemsCreateValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    SystemsCreateFarmErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - farm
          type: string
          description: '* `farm` - farm'
        code:
          enum:
          - does_not_exist
          - incorrect_type
          - 'null'
          - required
          type: string
          description: |-
            * `does_not_exist` - does_not_exist
            * `incorrect_type` - incorrect_type
            * `null` - null
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    SystemsCreateNameErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - name
          type: string
          description: '* `name` - name'
        code:
          enum:
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    SystemsCreateNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    SystemsCreateValidationError:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ValidationErrorEnum'
          description: '* `validation_error` - Validation Error'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/SystemsCreateError'
      required:
      - errors
      - type
    SystemsCulturesCreateAddedMineralsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - added_minerals
          type: string
          description: '* `added_minerals` - added_minerals'
        code:
          enum:
          - invalid
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    SystemsCulturesCreateCoverErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - cover
          type: string
          description: '* `cover` - cover'
        code:
          enum:
          - invalid
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    SystemsCulturesCreateCropErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - crop
          type: string
          description: '* `crop` - crop'
        code:
          enum:
          - invalid_choice
          - 'null'
          - required
          type: string
          description: |-
            * `invalid_choice` - invalid_choice
            * `null` - null
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    SystemsCulturesCreateDurationErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - duration
          type: string
          description: '* `duration` - duration'
        code:
          enum:
          - invalid
          - max_string_length
          - max_value
          - min_value
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `max_string_length` - max_string_length
            * `max_value` - max_value
            * `min_value` - min_value
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    SystemsCulturesCreateError:
      oneOf:
      - $ref: '#/components/schemas/SystemsCulturesCreateNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/SystemsCulturesCreateCropErrorComponent'
      - $ref: '#/components/schemas/SystemsCulturesCreateDurationErrorComponent'
      - $ref: '#/components/schemas/SystemsCulturesCreateResiduesErrorComponent'
      - $ref: '#/components/schemas/SystemsCulturesCreateLandManagementErrorComponent'
      - $ref: '#/components/schemas/SystemsCulturesCreateFertilizerErrorComponent'
      - $ref: '#/components/schemas/SystemsCulturesCreateAddedMineralsErrorComponent'
      - $ref: '#/components/schemas/SystemsCulturesCreateFertilizationLevelErrorComponent'
      - $ref: '#/components/schemas/SystemsCulturesCreateCoverErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/SystemsCulturesCreateNonFieldErrorsErrorComponent'
          crop: '#/components/schemas/SystemsCulturesCreateCropErrorComponent'
          duration: '#/components/schemas/SystemsCulturesCreateDurationErrorComponent'
          residues: '#/components/schemas/SystemsCulturesCreateResiduesErrorComponent'
          land_management: '#/components/schemas/SystemsCulturesCreateLandManagementErrorComponent'
          fertilizer: '#/components/schemas/SystemsCulturesCreateFertilizerErrorComponent'
          added_minerals: '#/components/schemas/SystemsCulturesCreateAddedMineralsErrorComponent'
          fertilization_level: '#/components/schemas/SystemsCulturesCreateFertilizationLevelErrorComponent'
          cover: '#/components/schemas/SystemsCulturesCreateCoverErrorComponent'
    SystemsCulturesCreateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/SystemsCulturesCreateValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/SystemsCulturesCreateValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    SystemsCulturesCreateFertilizationLevelErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - fertilization_level
          type: string
          description: '* `fertilization_level` - fertilization_level'
        code:
          enum:
          - invalid_choice
          - 'null'
          type: string
          description: |-
            * `invalid_choice` - invalid_choice
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    SystemsCulturesCreateFertilizerErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - fertilizer
          type: string
          description: '* `fertilizer` - fertilizer'
        code:
          enum:
          - invalid_choice
          type: string
          description: '* `invalid_choice` - invalid_choice'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    SystemsCulturesCreateLandManagementErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - land_management
          type: string
          description: '* `land_management` - land_management'
        code:
          enum:
          - invalid_choice
          - 'null'
          type: string
          description: |-
            * `invalid_choice` - invalid_choice
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    SystemsCulturesCreateNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    SystemsCulturesCreateResiduesErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - residues
          type: string
          description: '* `residues` - residues'
        code:
          enum:
          - invalid
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    SystemsCulturesCreateValidationError:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ValidationErrorEnum'
          description: '* `validation_error` - Validation Error'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/SystemsCulturesCreateError'
      required:
      - errors
      - type
    SystemsCulturesListErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    SystemsDestroyErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    SystemsListErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    SystemsPartialUpdateBaselineErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - baseline
          type: string
          description: '* `baseline` - baseline'
        code:
          enum:
          - invalid
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    SystemsPartialUpdateError:
      oneOf:
      - $ref: '#/components/schemas/SystemsPartialUpdateNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/SystemsPartialUpdateFarmErrorComponent'
      - $ref: '#/components/schemas/SystemsPartialUpdateNameErrorComponent'
      - $ref: '#/components/schemas/SystemsPartialUpdateBaselineErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/SystemsPartialUpdateNonFieldErrorsErrorComponent'
          farm: '#/components/schemas/SystemsPartialUpdateFarmErrorComponent'
          name: '#/components/schemas/SystemsPartialUpdateNameErrorComponent'
          baseline: '#/components/schemas/SystemsPartialUpdateBaselineErrorComponent'
    SystemsPartialUpdateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/SystemsPartialUpdateValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/SystemsPartialUpdateValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    SystemsPartialUpdateFarmErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - farm
          type: string
          description: '* `farm` - farm'
        code:
          enum:
          - does_not_exist
          - incorrect_type
          - 'null'
          - required
          type: string
          description: |-
            * `does_not_exist` - does_not_exist
            * `incorrect_type` - incorrect_type
            * `null` - null
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    SystemsPartialUpdateNameErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - name
          type: string
          description: '* `name` - name'
        code:
          enum:
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    SystemsPartialUpdateNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    SystemsPartialUpdateValidationError:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ValidationErrorEnum'
          description: '* `validation_error` - Validation Error'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/SystemsPartialUpdateError'
      required:
      - errors
      - type
    SystemsRetrieveErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    SystemsUpdateBaselineErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - baseline
          type: string
          description: '* `baseline` - baseline'
        code:
          enum:
          - invalid
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    SystemsUpdateError:
      oneOf:
      - $ref: '#/components/schemas/SystemsUpdateNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/SystemsUpdateFarmErrorComponent'
      - $ref: '#/components/schemas/SystemsUpdateNameErrorComponent'
      - $ref: '#/components/schemas/SystemsUpdateBaselineErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/SystemsUpdateNonFieldErrorsErrorComponent'
          farm: '#/components/schemas/SystemsUpdateFarmErrorComponent'
          name: '#/components/schemas/SystemsUpdateNameErrorComponent'
          baseline: '#/components/schemas/SystemsUpdateBaselineErrorComponent'
    SystemsUpdateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/SystemsUpdateValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/SystemsUpdateValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    SystemsUpdateFarmErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - farm
          type: string
          description: '* `farm` - farm'
        code:
          enum:
          - does_not_exist
          - incorrect_type
          - 'null'
          - required
          type: string
          description: |-
            * `does_not_exist` - does_not_exist
            * `incorrect_type` - incorrect_type
            * `null` - null
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    SystemsUpdateNameErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - name
          type: string
          description: '* `name` - name'
        code:
          enum:
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    SystemsUpdateNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    SystemsUpdateValidationError:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ValidationErrorEnum'
          description: '* `validation_error` - Validation Error'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/SystemsUpdateError'
      required:
      - errors
      - type
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    TokenVerify:
      type: object
      properties:
        token:
          type: string
          writeOnly: true
      required:
      - token
    UnboundCultureIn:
      type: object
      properties:
        order:
          type: integer
          readOnly: true
        crop:
          allOf:
          - $ref: '#/components/schemas/CropEnum'
          description: |-
            * `grain_corn` - granella di mais
            * `silage_corn` - mais insilato
            * `wheat` - frumento
            * `soy` - soia
            * `alfalfa` - erba medica
            * `meadow` - prato
            * `orchard` - frutteto
            * `vineyard` - vigneto
            * `grassy_orchard` - frutteto inerbito
            * `grassy_vineyard` - vigneto inerbito
          title: Coltura
        duration:
          type: integer
          maximum: 20
          minimum: 0
          title: Durata
        residues:
          type: boolean
          title: Residui lasciati
        land_management:
          allOf:
          - $ref: '#/components/schemas/LandManagementEnum'
          description: |-
            * `conventional` - convenzionale
            * `reduced` - ridotta
            * `direct_sowing` - semina su sodo
            * `organic` - biologica
          title: Gestione del terreno
        fertilizer:
          description: |-
            * `sewage` - liquame
            * `compost` - compost
            * `digestate` - digestato
            * `mineral` - minerale
          nullable: true
          title: Fertilizzante
          oneOf:
          - $ref: '#/components/schemas/FertilizerEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        added_minerals:
          type: boolean
          title: Minerali aggiunti
        fertilization_level:
          allOf:
          - $ref: '#/components/schemas/FertilizationLevelEnum'
          description: |-
            * `low` - low
            * `high` - high
          title: Livello di fertilizzazione
        cover:
          type: boolean
          title: Applicazione cover
      required:
      - crop
      - order
    ValidationErrorEnum:
      enum:
      - validation_error
      type: string
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    jwtAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "JWT"
